<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='FAA Wildlife Strikes (faa_data_subset)' inline='true' name='federated.0l8kfds13a2v2218ok04311yqyur' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='faa_data_subset' name='excel-direct.037cum10p2l1pl14knl1w0gf8v9m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Downloads/Chrome/DS/Tableau/Project/Project Files - Tableau - Option 2-20230915T181500Z-001/Project Files - Tableau - Option 2/faa_data_subset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.037cum10p2l1pl14knl1w0gf8v9m' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Airport: Code' ordinal='0' />
            <column datatype='string' name='Airport: Name' ordinal='1' />
            <column datatype='string' name='Origin State' ordinal='2' />
            <column datatype='string' name='Origin State Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Aircraft: Type' ordinal='5' />
            <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
            <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
            <column datatype='string' name='When: Time of day' ordinal='8' />
            <column datatype='string' name='When: Phase of flight' ordinal='9' />
            <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
            <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
            <column datatype='integer' name='Cost: Total $' ordinal='14' />
            <column datatype='real' name='Days' ordinal='15' />
            <column datatype='integer' name='Feet above ground' ordinal='16' />
            <column datatype='real' name='Miles from airport' ordinal='17' />
            <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
            <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
            <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
            <column datatype='string' name='Wildlife: Species' ordinal='21' />
            <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
            <column datatype='integer' name='Number of Strikes' ordinal='23' />
            <column datatype='integer' name='Record ID' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.037cum10p2l1pl14knl1w0gf8v9m' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Airport: Code' ordinal='0' />
            <column datatype='string' name='Airport: Name' ordinal='1' />
            <column datatype='string' name='Origin State' ordinal='2' />
            <column datatype='string' name='Origin State Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Aircraft: Type' ordinal='5' />
            <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
            <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
            <column datatype='string' name='When: Time of day' ordinal='8' />
            <column datatype='string' name='When: Phase of flight' ordinal='9' />
            <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
            <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
            <column datatype='integer' name='Cost: Total $' ordinal='14' />
            <column datatype='real' name='Days' ordinal='15' />
            <column datatype='integer' name='Feet above ground' ordinal='16' />
            <column datatype='real' name='Miles from airport' ordinal='17' />
            <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
            <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
            <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
            <column datatype='string' name='Wildlife: Species' ordinal='21' />
            <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
            <column datatype='integer' name='Number of Strikes' ordinal='23' />
            <column datatype='integer' name='Record ID' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y10001:no:A1:Y10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Code]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Airport: Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Name]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Airport: Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Origin State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State Code]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Origin State Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Type]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Aircraft: Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Number of engines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aircraft: Number of engines]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Aircraft: Number of engines</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Collision Date and Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Collision Date and Time]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Collision Date and Time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Time of day</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Time of day]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>When: Time of day</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Phase of flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Phase of flight]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>When: Phase of flight</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Amount of damage (detailed)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Amount of damage (detailed)]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Amount of damage (detailed)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Impact to flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Impact to flight]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Impact to flight</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Indicated Damage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Indicated Damage]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Indicated Damage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Aircraft time out of service (hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost: Aircraft time out of service (hours)]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Cost: Aircraft time out of service (hours)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Total $</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost: Total $]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Cost: Total $</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Days]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Days</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feet above ground</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feet above ground]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Feet above ground</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miles from airport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Miles from airport]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Miles from airport</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Animal Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Animal Category]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Animal Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species Order</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species Order]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species Order</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species Group]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species Group</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species ID]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Strikes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Strikes]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Number of Strikes</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Record ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Record ID]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Record ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
      <column caption='Effect: Impact to flight (copy)' datatype='string' name='[Effect: Impact to flight (copy)_1755559432102768640]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Effect: Impact to flight]' />
      </column>
      <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
      <column datatype='string' name='[Origin State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Record ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
      <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
      <column datatype='string' name='[Wildlife: Species Order]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='FAA Wildlife Strikes' datatype='table' name='[__tableau_internal_object_id__].[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]' role='measure' type='quantitative' />
      <column-instance column='[Cost: Total $]' derivation='Avg' name='[avg:Cost: Total $:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wildlife: Species Order]' derivation='None' name='[none:Wildlife: Species Order:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
      <group caption='Effect: Impact to flight Set' name='[Effect: Impact to flight Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Effect: Impact to flight (copy)_1755559432102768640]' />
          <groupfilter function='member' level='[Effect: Impact to flight (copy)_1755559432102768640]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='When: Time of day Set' name='[When: Time of day Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[When: Time of day]' />
          <groupfilter function='member' level='[When: Time of day]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='Wildlife: Species Group Set' name='[Wildlife: Species Group Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Cost: Total $])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Wildlife: Species Group]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country'>
          <field>[Country]</field>
          <field>[Origin State]</field>
          <field>[Origin State Code]</field>
          <field>[Airport: Name]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[avg:Cost: Total $:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Order:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Wildlife: Species Order:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Felids&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Storks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alligators, Crocodiles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parrots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Caracaras, Falcons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pigeons and Doves&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulls, Terns, Sandpipers, Plovers, Skimmers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frigatebirds, Cormorants, Darters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turtles, Tortoises, Terrapins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cranes, Rails, and Coots&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pigs, Boar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nightjars, Swifts, Hummingbirds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armadillos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pelicans, Herons, Egrets, Bitterns, Ibises&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Loons&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Deer, Elk, Moose&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rabbits, Hares&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawks, Kites, Eagles, Ospreys, Vultures&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kingfishers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marsupial&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Owls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grebes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodpeckers, Sapsuckers, Flickers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ducks, Geese, Swans, Waterfowl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rodents&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bats&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Perching Birds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lizards, Snakes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grouse, Quails, Partridges, Pheasants, Turkeys&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canids&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Petrels, Shearwaters&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Effect: Amount of damage (detailed):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Destroyed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Substantial&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Minor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Wildlife: Animal Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bats&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Terrestrial Mammals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Reptiles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Birds&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FAA Wildlife Strikes' id='FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B'>
            <properties context=''>
              <relation connection='excel-direct.037cum10p2l1pl14knl1w0gf8v9m' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
                <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Airport: Code' ordinal='0' />
                  <column datatype='string' name='Airport: Name' ordinal='1' />
                  <column datatype='string' name='Origin State' ordinal='2' />
                  <column datatype='string' name='Origin State Code' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Aircraft: Type' ordinal='5' />
                  <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
                  <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
                  <column datatype='string' name='When: Time of day' ordinal='8' />
                  <column datatype='string' name='When: Phase of flight' ordinal='9' />
                  <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
                  <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
                  <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
                  <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
                  <column datatype='integer' name='Cost: Total $' ordinal='14' />
                  <column datatype='real' name='Days' ordinal='15' />
                  <column datatype='integer' name='Feet above ground' ordinal='16' />
                  <column datatype='real' name='Miles from airport' ordinal='17' />
                  <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
                  <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
                  <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
                  <column datatype='string' name='Wildlife: Species' ordinal='21' />
                  <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
                  <column datatype='integer' name='Number of Strikes' ordinal='23' />
                  <column datatype='integer' name='Record ID' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0l8kfds13a2v2218ok04311yqyur'>
      <datasources>
        <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
      </datasources>
      <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
        <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[io:When: Time of day Set:nk]' />
          <groupfilter function='member' level='[io:When: Time of day Set:nk]' member='%null%' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='&lt;[When: Time of day]&gt;' name='[Action1_CA2AD56C45AE4396937FB52817FBC556]'>
      <source datasource='federated.0l8kfds13a2v2218ok04311yqyur' type='datasource'>
        <exclude-sheet name='Descending Number of Strikes' />
        <exclude-sheet name='Descending Number of Strikes Graph' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Number of Strikes by State' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Collision cost vs fleet above ground forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Feet above ground]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' forecast-column-base='[sum:Cost: Total $:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' forecast-column-base='[sum:Number of Strikes:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Feet above ground]' derivation='None' name='[none:Feet above ground:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Month-Trunc' name='[tmn:Collision Date and Time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Feet above ground:qk]' included-values='in-range'>
            <min>0</min>
            <max>14000</max>
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]' included-values='in-range'>
            <min>#2000-01-01 00:00:00#</min>
            <max>#2015-05-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Feet above ground:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Number of Strikes:qk]' field-type='quantitative' fold='true' max='105' min='-26' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]' field-type='quantitative' max='#2016-09-26 13:11:25.585#' min='#1998-03-20 12:10:55.812#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Cost: Total $:qk]' field-type='quantitative' max='40674312' min='-9735081' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]' />
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]' />
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]' />
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Cost: Total $:qk] + [federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Number of Strikes:qk])</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{29AEDF9D-36A2-4515-BD04-C011BF7F8402}' />
    </worksheet>
    <worksheet name='Descending Number of Strikes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Descending Number of Strikes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' direction='DESC' using='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk] / [federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{3194DAE6-5EFF-4970-89A1-00B5DD85F50A}' />
    </worksheet>
    <worksheet name='Descending Number of Strikes Graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Descending Number of Strikes Graph</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' field-type='quantitative' max='3275' min='-364' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</cols>
      </table>
      <simple-id uuid='{1B4BDC76-4B2E-4281-84F7-6ADF9C9C01AD}' />
    </worksheet>
    <worksheet name='Number of Strikes and Cost by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column caption='Effect: Impact to flight (copy)' datatype='string' name='[Effect: Impact to flight (copy)_1755559432102768640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Effect: Impact to flight]' />
            </column>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='string' name='[Effect: Indicated Damage]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Indicated Damage]' derivation='None' name='[none:Effect: Indicated Damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Indicated Damage:nk]'>
            <groupfilter function='member' level='[none:Effect: Indicated Damage:nk]' member='&quot;Caused damage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Indicated Damage:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk] + [federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</cols>
      </table>
      <simple-id uuid='{73179ECB-CB22-435B-A2A6-CDF7EB9450D8}' />
    </worksheet>
    <worksheet name='Number of Strikes by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Strikes by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group Set]' derivation='InOut' name='[io:Wildlife: Species Group Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State Code]' derivation='None' name='[none:Origin State Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Month-Trunc' name='[tmn:Collision Date and Time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[io:Wildlife: Species Group Set:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[io:Wildlife: Species Group Set:nk]' member='false' />
              <groupfilter function='member' level='[io:Wildlife: Species Group Set:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]'>
            <groupfilter function='level-members' level='[none:Wildlife: Species Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]' included-values='in-range'>
            <min>#2000-01-01 00:00:00#</min>
            <max>#2015-05-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:Wildlife: Species Group Set:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[Longitude (generated)]' field-type='quantitative' max='-7211461.2208690979' min='-14417447.09366378' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[Latitude (generated)]' field-type='quantitative' max='6461674.7691532876' min='2610911.5559423519' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Country:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State Code:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Country:nk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]' />
              <geometry column='[federated.0l8kfds13a2v2218ok04311yqyur].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l8kfds13a2v2218ok04311yqyur].[Latitude (generated)]</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7A22FC70-186A-4897-8323-C27FD86C420F}' />
    </worksheet>
    <worksheet name='Number of Strikes vs Time of Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Collision Date and Time]' derivation='Month' name='[mn:Collision Date and Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]'>
            <groupfilter function='level-members' level='[mn:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]'>
            <groupfilter function='level-members' level='[none:When: Time of day:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <size column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{848CD7DE-DA73-463B-9743-A9FC890E38F4}' />
    </worksheet>
    <worksheet name='Overall Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Collision Date and Time]' derivation='Month' name='[mn:Collision Date and Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]'>
            <groupfilter function='level-members' level='[mn:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]'>
            <groupfilter function='level-members' level='[none:Wildlife: Species Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' z-order='1' />
            <reference-line axis-column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk] + [federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</cols>
      </table>
      <simple-id uuid='{EF5804A7-7AF6-4F71-A57D-B32A7369B652}' />
    </worksheet>
    <worksheet name='Strikes Impact on Flights'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column caption='Effect: Impact to flight (copy)' datatype='string' name='[Effect: Impact to flight (copy)_1755559432102768640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Effect: Impact to flight]' />
            </column>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Precautionary Landing&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Aborted Take-off&quot;</bucket>
              <bucket>&quot;Engine Shut Down&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]'>
            <groupfilter function='level-members' level='[none:Wildlife: Species Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]' value='37' />
            <format attr='width' value='194' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]' value='152' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{0B63B1C2-1458-4ABD-9E21-1BEF111EEF71}' />
    </worksheet>
    <worksheet name='Strikes and Costs with Species'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Order]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Order]' derivation='None' name='[none:Wildlife: Species Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' included-values='in-range'>
            <min>5000000</min>
            <max>142131222</max>
          </filter>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' included-values='in-range'>
            <min>225</min>
            <max>11697</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Order:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' value='64' />
            <format attr='width' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk] + [federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Order:nk]</cols>
      </table>
      <simple-id uuid='{550249EA-DDFB-4EB6-9022-63C58D9FD2E4}' />
    </worksheet>
    <worksheet name='Time of Day vs Avg Cost by Strike vs animals'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='real' name='[Days]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Avg' name='[avg:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Collision Date and Time]' derivation='Month' name='[mn:Collision Date and Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Days]' derivation='Sum' name='[sum:Days:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]'>
            <groupfilter function='level-members' level='[mn:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:When: Time of day:nk]' />
              <groupfilter function='member' level='[none:When: Time of day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Day&quot;</bucket>
              <bucket>&quot;Night&quot;</bucket>
              <bucket>&quot;Dusk&quot;</bucket>
              <bucket>&quot;Dawn&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Days:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l8kfds13a2v2218ok04311yqyur].[avg:Cost: Total $:qk]</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</cols>
      </table>
      <simple-id uuid='{DB2CF76E-189F-4000-BACA-516D20B5E73C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
      </datasources>
      <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
        <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
        <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98426' id='11' param='horz' type-v2='layout-flow' w='98946' x='527' y='787'>
            <zone h='98426' id='7' param='horz' type-v2='layout-flow' w='88399' x='527' y='787'>
              <zone h='98426' id='5' type-v2='layout-basic' w='88399' x='527' y='787'>
                <zone h='41832' id='3' name='Number of Strikes by State' w='44198' x='527' y='8168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7381' id='8' name='Number of Strikes by State' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type-v2='color' w='88399' x='527' y='787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='25000' id='9' name='Descending Number of Strikes Graph' w='47324' x='527' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24213' id='14' name='Strikes and Costs with Species' w='27944' x='527' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24606' id='15' name='Number of Strikes and Cost by State' w='41075' x='47851' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='41832' id='17' name='Collision cost vs fleet above ground forecast' w='44201' x='44725' y='8168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24213' id='19' name='Number of Strikes vs Time of Day' w='19380' x='28471' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24607' id='20' name='Time of Day vs Avg Cost by Strike vs animals' w='41075' x='47851' y='74606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98426' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='10547' x='88926' y='787'>
              <zone h='6791' id='12' name='Descending Number of Strikes Graph' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='10547' x='88926' y='787'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='64273' id='13' name='Descending Number of Strikes Graph' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' type-v2='color' w='10547' x='88926' y='7578'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10433' id='16' name='Number of Strikes and Cost by State' pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' type-v2='color' w='10547' x='88926' y='71851'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10433' id='18' name='Collision cost vs fleet above ground forecast' pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]&#10;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' type-v2='color' w='10547' x='88926' y='82284'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6496' id='21' name='Time of Day vs Avg Cost by Strike vs animals' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' type-v2='color' w='10547' x='88926' y='92717'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98426' id='44' param='vert' type-v2='layout-flow' w='98946' x='527' y='787'>
                <zone fixed-size='280' h='41832' id='3' is-fixed='true' name='Number of Strikes by State' w='44198' x='527' y='8168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7381' id='8' name='Number of Strikes by State' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type-v2='color' w='88399' x='527' y='787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41832' id='17' is-fixed='true' name='Collision cost vs fleet above ground forecast' w='44201' x='44725' y='8168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10433' id='18' name='Collision cost vs fleet above ground forecast' pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]&#10;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' type-v2='color' w='10547' x='88926' y='82284'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6791' id='12' name='Descending Number of Strikes Graph' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='10547' x='88926' y='787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='25000' id='9' is-fixed='true' name='Descending Number of Strikes Graph' w='47324' x='527' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='64273' id='13' name='Descending Number of Strikes Graph' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' type-v2='color' w='10547' x='88926' y='7578'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='24606' id='15' is-fixed='true' name='Number of Strikes and Cost by State' w='41075' x='47851' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10433' id='16' name='Number of Strikes and Cost by State' pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' type-v2='color' w='10547' x='88926' y='71851'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='24607' id='20' is-fixed='true' name='Time of Day vs Avg Cost by Strike vs animals' w='41075' x='47851' y='74606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6496' id='21' name='Time of Day vs Avg Cost by Strike vs animals' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' type-v2='color' w='10547' x='88926' y='92717'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='24213' id='14' is-fixed='true' name='Strikes and Costs with Species' w='27944' x='527' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='24213' id='19' is-fixed='true' name='Number of Strikes vs Time of Day' w='19380' x='28471' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BB134C23-2A52-48E4-8988-DACD64CABA78}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000' fontname='Montserrat 1' fontsize='24'>Federal Aviation Administration Wildlife Strikes dataset for the year 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98426' id='1' param='vert' removable='false' type-v2='layout-flow' w='98946' x='527' y='787'>
            <zone h='3543' id='3' type-v2='title' w='98946' x='527' y='787' />
            <zone h='9941' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98946' x='527' y='4330' />
            <zone h='84942' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98946' x='527' y='14271'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Heading' captured-sheet='' id='3' />
                  <story-point caption='Number pf Strikes per State by descending airports' captured-sheet='Descending Number of Strikes' id='1' />
                  <story-point caption='Number pf Strikes per State by descending airports Graph' captured-sheet='Descending Number of Strikes Graph' id='2' />
                  <story-point caption='Number of Strikes by State' captured-sheet='Number of Strikes by State' id='4' />
                  <story-point caption='Strikes and Cost with Species' captured-sheet='Strikes and Costs with Species' id='5' />
                  <story-point caption='Cost strikes by states' captured-sheet='Number of Strikes and Cost by State' id='6' />
                  <story-point caption='Forcasting by months date and time' captured-sheet='Collision cost vs fleet above ground forecast' id='7' />
                  <story-point caption='Strikes by the time of day' captured-sheet='Number of Strikes vs Time of Day' id='8'>
                    <capturedDeltas>
                      <worksheet name='Number of Strikes vs Time of Day'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</field>
                                  <field>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Day&quot;</value>
                                <value>7716</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Strikes by type of animals' captured-sheet='Time of Day vs Avg Cost by Strike vs animals' id='9' />
                  <story-point caption='Impacts on flights' captured-sheet='Strikes Impact on Flights' id='10' />
                  <story-point caption='Overall analysis' captured-sheet='Overall Analysis' id='11' />
                  <story-point caption='Dashboard' captured-sheet='Dashboard 1' id='12' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' h='28051' hidden='true' id='6' story-point-id='3' type-v2='text' w='33289' x='33026' y='17028'>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000' fontname='Montserrat 1' fontsize='36'>Federal Aviation Administration Wildlife Strikes dataset for the year 2015</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='36'>Æ </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='12598' hidden='true' id='7' story-point-id='4' type-v2='text' w='21160' x='61371' y='15551'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='11'>State Incidence: Which states experienced higher incidences of wildlife strikes?</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='11'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='11'>1- California</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='11'>2-Texas</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='11'>3-Florida</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='11'>4-New York</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='11'>Æ </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='8071' id='8' story-point-id='5' type-v2='text' w='33289' x='54450' y='19587'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>Species Impact and Cost: What are the most affected animal species, and what are the associated costs?</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>1-Most hits from birds but least cost</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>2-Most cost from Ducks, geese</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='9941' hidden='true' id='9' story-point-id='7' type-v2='text' w='33289' x='6460' y='15748'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>State-Specific Costs: How does the cost of these strikes vary by state?</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>what can we forecast for the future?</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>1-Jan 2009 strange high strikes but cost is not very high</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>2-forecost say rising trends due to increase number of flights but cost stays linear.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='8071' hidden='true' id='10' story-point-id='8' type-v2='text' w='33289' x='32630' y='16732'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>Incident Frequency by Time: How do wildlife strike incidents vary in frequency at different times of the day?</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>1- Day time the terrestrial mammals are at most strikes</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='12'>2- Nighttime birds are increased a bit as compared to the day.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='50000' hidden='true' id='11' story-point-id='3' type-v2='text' w='86025' x='5405' y='48228'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Arial' fontsize='24'>•</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='24'>This project focuses on analyzing the FAA Wildlife Strikes dataset for the year 2015, aiming to understand its financial implications and uncover patterns related to wildlife strikes in aviation. The analysis is conducted using Tableau to create visualizations and address specific questions related to the dataset.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='24'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Arial' fontsize='24'>•</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='24'>The primary objective of this analysis is to thoroughly examine the FAA Wildlife Strikes dataset for the year 2015 and assess its financial implications. This involves the following key tasks:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='24'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='24'>Develop Visualizations: </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='24'>Identify Patterns and Trends: </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='24'>Build Interactive Dashboard: </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='28543' hidden='true' id='12' story-point-id='11' type-v2='text' w='49110' x='38695' y='15650'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='20'>Challenges</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='20'>Initially, one of the primary challenges I faced was the organization and formulation of meaningful questions to guide my analysis effectively. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='20'>Additionally, a desire to categorize airports into international, private, and commercial segments emerged as a challenge, which could have provided further insights into the dataset.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Æ </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='23130' hidden='true' id='13' story-point-id='11' type-v2='text' w='49110' x='38893' y='50787'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='24'>Time
Enhancing the creation of additional data-related graphics.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='24'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Montserrat 1' fontsize='24'>Crafting a compelling narrative to narrate the data&apos;s significance and findings, providing a more comprehensive understanding of the analysis.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='24'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{CFEA9540-6FF4-40B9-A14C-20E6F1FCFE9F}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Descending Number of Strikes'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C68E8597-5B2F-4269-A8C4-1FEB891722A3}' />
    </window>
    <window class='worksheet' name='Descending Number of Strikes Graph'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Action (Airport: Name Set, Origin State)]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BBCE7B0-394E-4D41-870C-E77BC0689126}' />
    </window>
    <window class='worksheet' name='Number of Strikes by State'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card size='31' type='pages' />
            <card size='162' type='filters' />
            <card size='302' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[io:Action (Airport: Name Set, Origin State):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Collision Date and Time:qk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Country:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8C183CE-41A5-4F05-BB68-87D0D7114243}' />
    </window>
    <window class='worksheet' name='Strikes and Costs with Species'>
      <cards>
        <edge name='left'>
          <strip size='290'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Order:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{11B371BA-8F4D-4533-A91D-F3EA7CFAF9E8}' />
    </window>
    <window class='worksheet' name='Number of Strikes and Cost by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28563BB7-865D-4241-94B4-08545E0F8836}' />
    </window>
    <window class='worksheet' name='Collision cost vs fleet above ground forecast'>
      <cards>
        <edge name='left'>
          <strip size='277'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='220'>
            <card pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]&#10;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Calculation_1755559432703430662:qk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Feet above ground:qk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40F73FB3-BF8B-4976-947D-1834DB577308}' />
    </window>
    <window class='worksheet' name='Number of Strikes vs Time of Day'>
      <cards>
        <edge name='left'>
          <strip size='284'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DA978AA-C0E4-44CD-8844-64B8853CE658}' />
    </window>
    <window class='worksheet' name='Time of Day vs Avg Cost by Strike vs animals'>
      <cards>
        <edge name='left'>
          <strip size='262'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A94A38B2-2A29-457B-8F35-AB4696F1220D}' />
    </window>
    <window class='worksheet' name='Strikes Impact on Flights'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D25EA48C-97F8-438C-8DFF-C29C0827CA40}' />
    </window>
    <window class='worksheet' name='Overall Analysis'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF303C6B-3C4F-49B5-9801-5CA577FBEB0F}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Collision cost vs fleet above ground forecast'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]</field>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Descending Number of Strikes Graph'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Number of Strikes and Cost by State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Number of Strikes by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Strikes vs Time of Day' />
        <viewpoint name='Strikes and Costs with Species'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Time of Day vs Avg Cost by Strike vs animals'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2DF62E37-6286-4D0A-925B-8188A1FFFE42}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0BD8B4B8-D7E5-4729-AFC3-BC31A8A0B3CF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Collision cost vs fleet above ground forecast' width='192'>
      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
      U9b8fzYEUcLdC5ZMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZBl133f9zl3v2/v13v39PT07CtmMNhBECAAgiLFRSIVUbQlS7FdjpWS
      7LicVP50KhVXJZVKJamyrcrixHJCW7IcSyqLkiiS4gISIIHBPgAGs09PT2/T29vffXc7+eP1
      fVu/3mYH0d+qmX7vvnvPds/vnN9+hJRSsoMdfEKh3O8G7GAH9xM7BLCDTzR2CGAHn2jsEMAO
      PtHQmh8l//b/+t8Y3PcQJx85iQnkF2cp1QLiFHn9Bnz+qUPMLhTIxgSK3YuTm0UYNn/4x9/i
      Gy+e5sxUhaTiMTqxF00zwM0xM73M4WNHWMyVSOoBerKfvkzivnV4Bztohdb6ZeLIEd578yxW
      0kbzffyaiy/AXThP7+Bhfu9f/hEPnTzMlVqRlz73ed575wYyCHj04eOkRvcTu/Adcko/R/US
      Hy4l0fKzvPbKm5QqOTwtyYAtsbNyhwB28MBANNWgkkK+QKVcRlUllUCnJ24igdCtcuNmjv17
      RrhyY4GxoT5S6TRzU1cx0oOo+Ni6wvkr0xycGGZuYYXs4CihUwQZ4roB88t5UqYk3jtKbzp+
      Xzu9gx1EEJvZAcrlIpVy8V61Zwc7uKfQOi/MXL+Cq8RR3CKDu/dx/c1XeOO/+y8RgBDA6r/o
      o7L6t3Gt4y9KdK9olrH6V+n4vvqxcT36R5dy2+oElI57W59RBIBs3Bv1I7overZRbkvZSkc7
      1tRJx5i0lqO0XBMgkO3ltN4sOtq2WrhY7UijnpYGNfux+rsi6mUqIISyZjDFagVR2fVyV7+v
      lhvVh6K0NrzZJuq/NduutFyLBltpeU5BUZTmgEfPCKWlnuh+ZfVZZbUvSsu1jntRkEInVHQC
      YSCFRiB0QmGsXtORQl+9Vv8XCINQ0er3CJ0ArVMLJLl65QrxmKTsCC5fusQOdvDzjHYCkDA0
      NMTFS9dYmLmOZtr3qVk72MG9QTsLJAT7Dh9nX8ulD2fPowyPtrEvrWxAK8tAy2cZ3Sci5qN+
      rZV1kbSwPi0sUNhxnZbvrewPLd/b2KXONjbaJtewYZ2sS1t3xOoK0coC0X5/55i0/k7HPZ33
      dw6i0nJdtDWoye60Nr5Zh+hgqVZZodZCo9+hjXcT0b0NlqhlMJWOhq8+LxSl5aU0OyEAZPTS
      o8YriLBzoCM2CQhbWa0mqyQarE7LdaXlMwKEtsrSaEhUQqESCoEUEIoQKQJCBKGAUEikCAmF
      ihQeIRofXbq2uRC8gx38vCKXy+0QwA4+2dhxhdjBJxo7BLCDTzR2CGAHn2jsEMAOPtHYIYAd
      fKKxQwA7+ERjhwB28InGDgHs4BONHQLYwScaOwSwg0802gjgrVe+w3sXp6ktXePCXGnDB3/2
      yk+3VdHZN3/Kux/W3as/ev9tzpx5g6s35rkxdb3tPqeUo1Cu8srPXt+kxJCfvfKz7r94FX78
      8o858/rrVN2A6zdmOm7ocm0Hn0i0eYO6SpzFK2fZl9hNseZz9oMPOTgU42Ipydy5VwlClezQ
      IAiTWqXAW2+eQbUy2KLKSqHE0PhBpj56h/TQBCeO7OPih++yUnJI9w3x9rvvc/rpFwBYuDnP
      7sOPsHs4yx/9m/+XQ6eeRAtLVKsB48MZaondAJx9+w3G9uzmvfcvYsVTZC3JSsVl/6Fj9CRN
      lm7O8LNXXmZk4gCLN1fY26+zog8zFquwVHT5hSefwi3M8/0f/pDPvvgSpaUZbi6ucODQAb7/
      wx/x2RdfYm7yAlU35JGnnyGmibUjtIOfa6xhgZ5+5Ag/OfMhSCgUCoRuhULZJZ7ppde0OXD6
      NIGTx4ylOP3IoxTzN7l48TyqZnBj6jpuqHHiyD5AcnOlwOOPP87S7BRjE3s5frjuaP3M87+A
      qCzw45+9w/i+A5w6fpjlpRwPP/4Eilek6kqmr5xluWYye+4cgWkxOzeDHbPxPZdSuQpA78AI
      jz/xJFNTU+SXZnn38iy7BxJoiQG+9NLTvP6Dv6CkpDlw4CCjgxlWcnm84izl1WtDvRZXrt1A
      C6tcn8vf04HfwYOBth0glUqR6NtNwjxD0tZw/SpnLxZIjQ8iSKEZHhqQSqXxnQpvnDlDtn8X
      g5kEuYrP+Phu8gs3V0sTDPSkeP31M/QO76GSj65LLp47S6FSo6+3DzMo8tb7H9E3MIgmQLeT
      2IbCkVOfwggqpPr3s3h5ivHdexCKiqYqODUHgMCr8Nrrr7Hv8Gls5zp//V4OFfAqed56/wJ6
      vIdU3ERxS9yYW8R1PexkD7apo7gl5pYd9u7ZhdBtRrKxezboO3hw8PPhDi0l77z+CruOPU5f
      wrjfrdnBxwg/HwSwgx3cInbUoDv4RKMhA0gpqdVqzbjRLUBKie/7dNtENE0jDEPCMGyUeTub
      TWe7orKi60EQoETpOraAMAxX03U8OGgdHynltt5FN6iqiqIojfd0NxCGIaqq3ta7vRNQFAVV
      VYG1cwXax7b19zYhWAiBaZpbrjQMQwDK5TK1Wq1RhhCCRKKe/tB1XcIwJAiCro3qHLjo+ajs
      RtB2R8M7n/M8D13XG0SwHsFEn13XxTTNxvXbJYaoL0IIpJQEQYCmaY12d/a1s43RYhEhCILG
      BG69vh2k02lUVcX3fcrl8rpt3gxR+7uhVqsRi8UIw7DR/+0uop1ld74LTdMIgmDNO2xdBBOJ
      BLZtd32PrutSrVZRVRXDMNA0rTGuaxJjbQeKomAYdaEzDEN83290vlqtEovFME0Tx3G2XOZG
      g7fRywqCAF3XNy03KqNbWeutEltF6+BHE3grZa3Xr3g8jqZpFIvFWyKCiKi6PbvV8lr71Lnr
      to5lt8/Rvbf6TgFs20YIged5eJ7X9R5VVTFNc916NE3Dtm1KpRLlchlFUYjH43Vi2LD2LSAi
      gmQySblcbjQyCAIcxyEWi5FKpfB9n1qt1tgpuqFbB9brVOfL2A77s5Vyt3LvRves1571JkRn
      vdcvnkcPahx6/Bls26ZSqWybzahUKl3Zk/V23W6r8Xp1to7/Ru26FVaudSeJ5ku38VQUBU3T
      ME2zsdh0I0BFUdB1nXg8TqVSwXVdisXinSGAqCGGYaCqKpVKBcdxkFLieR75fB7LsojH4ywu
      LuI4Dp7nta1A3diQzoFrHZToc6t8IYRgaWkJy7LWXclbr/u+j67r665q3Z7vdn29l9+6A2yG
      qC+tY7I0dQX10hscfeo5XNe9JR47CIKurOd2sNlOCXeWCFoJsXWxaB2biFVPJBJomtaQcaIF
      tpVdMk2TWCzWIBTDMAjDkFqthu/7d4YAoEmhiUQCy7KoVCoN6nUcB03TWFhYoHL9I8Srf4RG
      vUOr04+WtFlNSAlCEA3tSqAznwuxCVhSLHrCDVgr0fjvrqAiFUxdJS67b8vbQVEzGTfad8aM
      kFS1GMvLyw1Z4lagKAqWZaEoCq7rNggiUl50yljbIbTo2Y0WiY129VaZqbO8jdphmibxeBxV
      VRuchuM4uK67pnzP8/B9vyEPRTtCJFfcMQKIKo4Et6iiWq3WoLiFmSluLuQZ69tD3/KFbZfv
      SyjKkDgBZaltPPnkrfHxW4ZUMKUkye1rVzyp0qM0y4lefswv8M7/8l+hjR0mduwp3MVpqFUY
      eewzZHv7Ni034nVVVUXXdWKxurU7DEPK5TKVSmXbY7TepN5IVmiFZVlomkatVuu6syWTSTzP
      W1du1HWdRCKBlJJyuUy1Wl0jIHdio13wjhJABCEEuq7zg2/9CQN7DpDOZOjp6WFwdDcCweK1
      Nxi+lYKlWN0Vtnj7HVAl3io2YsPW8LLrlCGA0bAAk6/jXjtDQtRTO148/xaJp77I7kPHSabT
      XZ+NeN5isUgikWhjxyIWolKprFEHR2rT9WShbixJt/uivrbuMtE/13URQqBpWpsaXUpJpVJZ
      t1xFUUgmkwRBQKlUwvO8TVk0VVWJx+PravnuCgFEjYhfO0PtjX/P9ZFjnDeS9A2NcHOhxFIY
      4zjbZ1C6MEn3GRuvOt3kGKhrJVqvb4VLN0SzrjFnjsr3f5+LLyfQnvs6wfQlgkqR5O4D2H3D
      ZHftIZVK8d47b1EplTh8/CGWlpYYGRlp7M66rmMYRmMVbm3PeixINwFzI3TTuFWr1bZ7OmWp
      yF7RTTUaj8cbkz/SOHbKgrquo2karus2nrEsa30N0YY9uA0IIYgdfBR77gMyU3Xf/vBiSFIZ
      YNkcRDrNwWkVbDuFoNbyWmGHPlWhYsvbE/KiNqxXz8ZYq5XotF9EZauquu6qqQYhlVAhpjSf
      3WhLF0BcBMSDPPL7/2czqfDUGywkRtC++HcoLi9QuHmDT3/uK5iWhed5XL9+nVQqRTabRVGU
      hnYuWnmjFTViX9cbo1sRyLei79+o7GgHKxQKDd6+dZ4EQYBt240draenBynlpvadu0YAAMde
      +io/+8l/YFDWg2uqUmOpFuLgUgkEFj6vXVtgKJuiUiyw6OkgPQ4O9zJkqw3jSiS00DI5U3gs
      YGFvsn7eSzaotS5FUciVKyx7kCuUsGyLquvx6K61vHsKj1Cu5aG3gkh9UB45Qva5r/HCqcca
      thl4qjFJNE1jfHycQqHAtWvXGBoaaqgPI36624rd2qftTvyNCHk7WiEhBJZlUa1WG+WFYdhm
      yIw0er7vN4jZ932SySS2vX6a/7vmC9DYZscON67dkDGEEBheBUupT5KUZTC9UuJ60UMzDdRQ
      4oSiYdrWdb2p42UtC1QVW6PhIAgaxrpI5Rhda12dbtXqCs1VLnoRSVNHE5K+mMZKtUafrRME
      wRq3BKX+8K3VCThHnuXR3/2nHHv8Uy2Tv96XuetXeP33/1te+f63EUKQTqcZHx9neXmZ6enp
      xgSLxWJr2LXNVMKbaWy67STbQfR8tFM51So/+IN/xfLyMnMz00xfvdzVPhApXQAMw9iQ2O7q
      DiCEwNj3MP7km2hC0i9qTBn9PCun0FbVlNm4yXBvml5TUPYkU0WV/emtuTT3S4dlYaCgYm6w
      E0QvM5rsvu/x5o1lVFVBUwTjA1l6dKWrPeJWEJWzWKqSq4X0aConBhJMrxSYLdUYiq/tXyDb
      n91SPUB53+M88hv/EMMwKBQKpFKpRl+vvfcz5I9/j/Sjv8nBJ19qPCeEYGRkBNd1mZycJJ1O
      NwhgIzal9bfouq7rDTeUbvdtRU7YTOXpui6O4/D+T36AdfbHnLl6jlh5GTQD8Zv/iNF9B7vW
      u9nkh3tAAPaug0zqfUz4C2RVj89ytWUZF4z2NI9MTZhw1FrfnaGO9sHqCV3mFYteGWy4nbW+
      SN8L0HSd3oTFUr5AiHJHHbqi3W+oJ81Qy/W03b/uMwV00rhbriNA4D72FXY9/gLnvvPHXFvM
      8+QXfgnbtrn03hm8y6+Snf0pczKDd+0DPiqvcOAzX0PXm8RnGAbj4+PMzMyQy+XIZDJtQmo3
      1qfbLrCRJmY9Q+N6cl6rTQJo2C7mpm9Q+OGfYiPJlhbqD3hVZj54h9F9B7u2tdXuEbnKdLb/
      rhIAwO49e/jIzkJx4bbLqp8oE3G9dQgBA9JhVtgYhGRld1eL1o5ruslgwqU/aaMpKgOWuqFB
      514glE0NSKSK7DQSQXPiXCFF39WzzL/5LSwCjKGTTF04R+67/4LR0rl6oSqMh0voyy8TLsG5
      wGf8yS8RhAFz7/4I/8Z7EHjUFq+jfOa/QFVV3FqN+KojY+ekWm+MIqNStIhsxBJ1Y6tay+zc
      faNd+/Jf/xm2165BAmBV29ZZbrQLuq6LrusNrVCrOlhKefcJwPM8SitLrCg6PcrGVtPNtyvZ
      OG6pFQrQJ2uUtygPCCEYz6YQQhA3Nttx7g3KviDUmlqgIPD51vmbPDWa5u2FEif7bK4UAp4a
      ywCghh69ixcbE2bP3DtU/+wss6k4ybQgpa8Kh9FhkQIGLvwxCx/9GcuBzX4j1zgByTdh6if/
      gmXfoTzxIgef/aWGLLQVTUqkhYkma6uLSSvWu7aeBTj6nF9Zxp+6SDc/ZRluzPo6joNpmui6
      TqlUaigEoK5ZuusEkMlkGDxwFHf+PDfKBZLSI610t562bonVUKEYqnQs+JQUDbtLp8tCJ3YH
      3BJa29KKNVv/HatptTwJaAb6qr5/crGMC/iKStI0uLJSpRLW3XgDBAprhT9bBFjFApfyBq6m
      kU0L+uyQHiNECLCUEEup0ac1d8mb6gBVL2RILONqCv7cO1z+CRz49C8Ri9d3gkh50MpSdKJ1
      ZY0cIjdz4eg0kEXXOhUR0+c/IFbJdS+kxQbQDb7vUygUGu4Tvu83FCGmad59ApBSkg3yDAXz
      YMGHFYv0qvtAiEBZnd2uFJSkRhWNUEBMCchoAZK6giSajpmEgVdQ0GkfJE2G+EJBl1vX4mxH
      RdqNFZkJDZblJqsjAtnNYNZxqarqHBTNgKS9g1kGe1I4NZfRdIyJTC9VL0AKhenQZK9ejY6l
      66gP+hUXQhd/WTAlNd7VLZ4Y8YhpkisVk4o1gDVymMT+x9DiGQ7uGuOHf/ZHpIb20Dc4SGlh
      hlKxiB2LA/UJrWkamUymQQzF4vqHp+u63sZ+RJqabjx/qxZnvR0iP3uDcqlC3LaYzRXpS9pM
      LpfZ15fCXo1f2eg9ep7XiEuJXDGisu86AQBIsynoZrSQSd9GKIKYEuCGAlWApUpSSsBurekD
      0m1Asukqr3o2eodFsbp6QuCisBgLN07q1da2LkSwVd11n6yRvAO7jgSEGaJ2vMO4oRE3NHpX
      v8cMjcVAp1/xtqS/1oQkKzx6Ao9ziwmODEj0536H3ngP+w8dRtM03nvrDEuzkiOzf8HyfA88
      /eucePwZVlZWWFpaYmhoqM04put6g6dudW3v5OVVVa3LFKsOaoqiNKy30fhGWprWa51jf+W9
      t/De/AEVx8FTNEwhubqYoyJ1CAMK597m+rHT7N53YE3/I02Q7/sEQUClUqFSqaAoyp0JiNky
      ak3/jlHTY8RYX9uxmSImH2iEztpJNyAdAikoouGxdofYCNtSPUY86waNjQSw1tWtW4RbBAEU
      a7CsqmTVjQ17PYrHnDRJi40dwDrLX3QUFgYeQRgJxif2NtSWR06c4oO//H2yMmCvmKP2yv/M
      hXf3k33ubzO0+wDXr19n7969bYKmoigkEomGTaNTQI9kBiklhmE0xqNVLRkJpa3PtrmDLyxw
      48olrr/yXYbwmXRcfOmwlK9wcCBNNVeiIlNk8vNUF+dhlQCEEMzNzZFMJjEMA0VRcByn4arf
      Kqh7nndvWKBgZabRuNtVNU5VdZJyrTZAUBeSM3jMKzb94dp7JLAkTNo5+G7mte5eR0LQOP+4
      pgiyG3iCSikbgmGrVge688Z24FEMjU0JIEA0iHs7Ftq0DKgOnSaYnST28GnCMOT8hx9w4d3X
      OX7zu6T1el9MRTJavsi1j95gZN9R4vF4Q89frVYbIYWqqmJZFqVSc7ft5igXEXzk/+R5Hpeu
      XsOpuehRyGjgg18jDCVQ53eXzr5O+cJ7DIZVQHB016pCuT8FwGgq3qhj6s//ADOV4fhjT2IY
      BuVyuRGmWygUGmMUj8cb8Sme59XbtenI3SYcx8Go5mFrsSEbohYKVkohqQ3uEYAtA3KKSSZs
      btEh4AgdISHTJY5gPeLs5swGkFcMVIJ1pWHX81h0Q5IqzFd9TBlQFSpH+jZo/RbXBiFoi7NW
      FIVq1WG2JsmXHCxDpeB4HBjsoccQhEKBx79I/vXv8Pjf/a8BKBbyVL//z6muBKSyawnZrK0A
      NCL9MplMw3kumtRRjG3E5kTj1arZaR27m4tLfPud67ixIYSSbPxmvfpNJubPNr4HCKqqgRTd
      pJy1sIMakxfP89izz6OqKhMTEw1X6UgzFSEWizXarev63SeAUrGAJdYOcKdQuRWcr5ikvHYZ
      oXXAo79p6XITi5wwcIWGQkgNFUsG3QXSVWx3h6oL52tliDAMsUwT1a1QcCWWpjCWjDFdun15
      wRCSIIA5YdFPuWEXmcxVkYbBSFLHtGwMpULKqLerphhoH7xM+tSnyWR7kVIyfe4N9irz7O1d
      W4cQ4FfqqSIjC3PUxyjwxDTNhkal04W6c/ILIVjO5fmLs/MEiZG1+62qtbGNoVBQhcSTa+eG
      BOb0FKnAoaboxCcOMfzYczz81Kca7SgWi21u1UIIbNtGStmIDotUt3edACqlEpZYu61HlDm1
      UgFVZT5XJZM0yZddjo+msRSxJqRQSIEj6hM5KmNuZQU9kWFueYVjgz28c2ORY6N99GsOVaGR
      DStNb0kEC121yVvTCLURSAuddHu2XK1yeTHHUCJG2Q+xhGQgbjc0KrfjbjGkelRDwQ2STGhO
      XTMjJcVaQNowyFoajm9irrIYSXxi1XmMsQMNNWMwf3Hd8t1QYOx9EmgauaA++aMwy0jV2TnR
      WxFNyBs3pvneuZsE8SG6IbRSDUKqKjqeqjGIw7Sw1+yKAQJ56BHyEo6ePMXjn36uTbbwPG+N
      y7VhGCQSia5jfk9YoIRYK+ELUQ9uubJUZiibYE/GZKHoUpTgeBLbWtvYY0mHHxUNrJatfyBu
      sYBCj22xUixzLV9l90CIpUFM+o26mnWvv8JvZKjZLuK2zaf2WF1ZqHXL20Y1tiLpkx5XPJtx
      rcpDHV6mo6l2D8icleWxE48AUCoVsa693PXtB1IwmX2CocHdvP+nv8foM78CtDuYdW26aIYa
      Rq7fqqpSKpU4e/4SNWN3V82VlCGxpasNuWix6rEn7nN1uYgfgwulIgd7k4RAWTUJRg/y2LMv
      MDY+Tl9f3+bGU00jmUze+4CYCMFy9zz8iqKAIhhJ29RCcIXKwcEE+bkSnuzuRZgLNPRVw0d9
      YsJMycVRBbWqg9GT5qX9I8TtdZzpBPWosttAg5g6DHSt2Gow/BpsUz9gi5AhpcZsYLBL29iP
      SMbSTbdgKRGi+4QoSIuex36Z8g//d8aca9w4EyN57IW2vD/1IpqNtW0bXdcpFAptcblSSqrV
      KqNj49xY7L7zCqFQ0+N1liQMmat5JGpVlj2Q+QJ9to5v2PhPfIEjJ05x4tTDjdjebohSpDiO
      g2VZjcD59XBXCUBKSf7KWboH7QEIjgxn2q48s2f9xFyhhPZZIhjvz65+jq99gI7Vtps9Sq7N
      QND623oGHIForNh3woeoIjTKnko52HpiMqh3KW5sXr89dqhNS+P6Ab6sW0QvLbvsiivMVCVx
      UWThm/+YU/0aARDk5rqOAdTHx7IsHMdhZWWlQfjxeJxyuVzXwUuFc3Nl0MzGM9CuMSoMHIDF
      c9RQKObylFMGnltDjWeYXCmw65nP8cVf/62uzmydiFS0kfvDZovRXSUAz/NQr79zx8qTyDbB
      c6sGq40E29b0jUIIzs8vkbAtVooV+jMpBuPNoIv2UMa6qvROOdCpSHqkR4/cfpD9kmfCBi5N
      oYTUwVON75YdYyF5iIHKW1ycyXN5yUHd00exXGGq5HJ0t0YQ1Hdhb+k6YRiu4auhmY7QdV3+
      3Q/fo6qlQIApAsywSs1z+eijS/TsfxRLuUmhUKanN8X1q5OYwkVLDjEwMgq6BYCnGrywdwhb
      hBwAHFRuTuznM3/7d9viHDaDpmlbzqRxVwngxtVLDHjLd9Bxpsl3dK5I603yzbQ6kTovEg4N
      TaXie/Sl0riB32DF1mYlE3gxm5po1Xm3WBBa3Dc6/ZkAyrUQMwxwUInhI6HhB7RdbEaDAnAL
      S43vpmnSd/QptHfeY89gmtlyyNxCAWmY7MoofDRfYfRgL0IIUu4inuu2qTpb4TjOqhAKWry+
      mwdAKQyRpk9yyCeRiKPrGk61yuT7ZyjWAkbHjwPuamqTOtH7QsFsMWD6QuHQp19seKfeDdxV
      AkhmstxER9+Gn/t2sFngxVZUmq2yhqoo6KpKzDApV6sMZtKNcjtXIAHs0R2S6q1FkHmGoCIV
      ksJlOdD4yLGYEOtnRNgIehBw2bXYZ3RPJSIEVKcutnwXqFYSECRiJi8db9fOHG35nNN6GV/N
      PKGqakMrFAXVLywscHNhkVCPrXkfoVehtLxcZ5XiCZbmZ9n76OdwSstUV+bQEsMoioIZljhX
      cbBsmMyVGE5ZLFZ8Pr3HwCuv4wR3h3BXCSCT7eVqqJK6A0aw7WLdHWGjh4RgvHdVJkl2jyO9
      Va1QJ3QhSa+qh/s0n9OxClerOgO0a1o8z+NavspowmShFtBrqiiqRkxvDmoSn7Irudg/wJ7e
      pn2iobGVIAfbE9H4cx9tuHNIKZkM++j7wj9shKYmk0nCMGRpaYlCoYDv+8wu5fnptRKetdag
      oFpp9j38RON7pn+k3vdMH8lMX6Nxo8VLeLJAn+pyXa0yJHw0pcaU3MUXPvfLdzWL910lAE3T
      8PommF+4RIMnaBUmaXU6aBduW6/U75PkfA2HsOFB2gbZ/Wsr9xF29Z/cHu5W0ExMCdFUkH47
      gbl+iBq4LNVUiuUqFjqBNIhl2gk0TkB5Pk9qKMlwsrN0uOo0T+OsViroU2c2bE81UNBe+Af0
      9A83EmpNTk6i6zrZbJZKYYn8ue/w7alBtMwo0suvcTDphAC0WKqtf6FbxS2uUNBT5H0VV1NZ
      VE2KqJzSclz882+S/vV/QKlUIpvNdin19nDX1aAz+7/AH0x/1HYtsgE00xeuOlkFNV7MvUoi
      bLJM9RCYiCA8VEWhhkpTsGgOtY9guE+nX3NB1B2Rm7dIAgRn5+5GL9dHEATk3RBThKDpVGoe
      /fHump4Rw2fGN8jSlDdKVYfrlZCMW8bXDIo1l5wLI5m1O5TqB7hBd/1stnqZuekp0tlefvyn
      /5psIUeRJlsXU0Mymo8XgicVlve8RNaOE4/HWVhYIAxDRkaGufL2y8z96MfoFDg6qNE7Monf
      sHO2LjsdEBCG8IPlQyz0PtUcH6/GoF9mf9ZGAGHK4FpgY1g92JRZOf8zJi//ApcvX+XzX/ry
      JqO9fdz1mOBHTxzgD39ymbAlWms9NkRKgU1AfKN0gxuw3K4UZFXJoNb0V2k10dM8DBYAACAA
      SURBVPtSwDqW4O1jKwKr5NpigbKiEToVEvE0XuCvSwC2CHHQoYUABrNpBjdZ+KSEHBpGX4zx
      TPd2JVSP7/3+/0i6XKC3urhmil6Npdm7J4GiSHQFeirvMX2xD8epkkomqZWWufb6v2I8uEQV
      mBE99fYlt8eePCWv8seVY2ixVZ8ot4oqwwZjoAC6DCnHs7ysDzN27DTWtQs8fPrxbdWzVdx9
      b9Aw5M7HT60PQZNN2Y635N2AlJKFksOCGxBXBRVqLBdLjKQs0mZz6CPvSU1RsHXJdtONLlsx
      nj0dI21u3E8rP0fG6y5ox3TJnkzr6lIms/wtKot/hSF8+s1bTxfTigNZn8ff+7ecsx6j1HMQ
      ApcAQXFgHyKRQesZZDjdR3ZsD0dPP8b5s+/QOzTK8vISgyO77kgbWnHXCaBcrXPt9w5r/VGg
      PskEEsPW8KTdkD0kUFM1kjGl5fluW3n9iegXU6gUTYkTbUkR0ZUc+hqB+YJHdjddFKSUKMPx
      VT96GvaH1jhVQ6nr7ZVtrBmGU6Pmx25rc+sm2iQMSWILGry52UUWQpMTI3HePT/LctUnl3Po
      743jCZVnjg03YpOvzLkc86c5XbnB928OcUmdwH/+b5HYtY+VsotTWOa5x0/S19eHqqocPVV3
      3xgc6u5HdLu465bgMx9Obq6ovpNoqap1ggGoAj7TuzZa7Jqd5bFDW5s9mwnBP3krhErzuKjO
      oG+gLSijszxVQE0KFFmXflY95BuE13oNBAkRIHviDMQ3Xv032wMbEtVqHENnwqnW3dQPaXNv
      H+pLUVh2AYFhGpwYSPJadYFcwcETkptFj9F03VJXzlcZUEMkgqKv4g4f5rLsYahQY/9gmlPP
      PXpb6eC3i7tOAD/9YHJb1dwOqXS+5PUm2d1EZxu2Y8EEGFFrXOtLsTfpNUR/sep1UWfv5Orf
      +vfXF5J85YTaNnGhfcKKyEK3ARUIAeWyw4XFKg/tSjE1s4xnmCzcLGBYBsVSjf7BHo4OxZgp
      CoyeJoFPzhdZKvtc8j3KVRfdNhkbSHBgvI/LN3KMrE7+wPc5P71IySlyI+egnHyKoz2SX/3a
      p2/df+o2cddJ7TMP7+M/vHoVuY7zVTs28tbfHrql17gX6CS11qCVNZOyC1QBSbfGgBlgq5u3
      +8hgiKGqlMs13rye41MH+3njwjx5TyJrPrqlUSjWmBjvB1SmFlaYD1R8z+XUQIq3ZpY5ODyA
      BcTjFolCffca7UsxWXBIZZIEvsdob4zR/rrmKV+BgZ7muI7v6mU8atBoz+qHurrzxN4mC+i5
      HrYpuSkG2C1nKeUvkHjkc/dt8sNdJgBFUfjGl55nZjHPqxdvzaK3kc9P14kk10/MdC92g3lX
      Y7ZgNPwfPM+vn9ToeWi6hu8HCASK2pn8V20JMZYUagp7hwR7EhtLxIEfIiXEYiZDmfopiaZt
      0W/4rKzaXSxTJ5QQypArKxV802b/qrv0YCZFn6VQAgqFClfmy1R9SIqA6UpIny5JpxNYisRW
      BaGUzM779I/WtU+tIlPLklM3vq1m6Ci6gqQpeGeyxtXZGk/3lrETNuXkAPOz03jhIw0Z4V7j
      ru8AiqLwzEN7efXiW23Xu0/sVftAyz1R+m5FUbiymMMwTfoMlVDTsVcHbb0VxPd9zt8ssbfX
      5krOJamECMNkLG1t2u5Wr8VON+D1vCOhHoNgUWvMhkAEhH5Yt2f4bvP4U6ngBxFx+JhK+ymH
      ZUdFUTZnn8ZNhwsLBsNWlbmcgxPA3l6bfKDQE6sSS8ZYWCwy1h/nrXmH5w6MUHJ9Li8WCKVk
      peJSTlpIIJWK8QunYo2yJ1rGIWInF8sCpVDhje9NcgYoCp2sFrAkdapSRZGSpOLRI5tykKOa
      TMsYI5bHf3pAAzSqUqf3F/8WYwePb9rHu4m7TgD1l7qNVbd1RWmZbGEYsieb5EbBYXI5jxXP
      sjupb3gY3dRikblqSHE6j2WbSCGZKVQ3JYCIn56cXqFnMEtCCfhgqshDezK8e3WZsazFZM7j
      4fH0Gt/0TpKO0oNEaPUoja5382+PEXAtpzBis5pIuDssRTLoF5irJXn2SHPypgAydcF+INGL
      44MShKvu0xoPjWQRQjCxamMorOMqHqFYk7x6zsNbrKA7VZKRO7NqUxUGw34JR9EINI2SF6Dg
      oQU1jFic9z2LIc2lGlpMmXvor05ROvmrHDpwbP2O3SPck41nYmwYrUv+nDUrqFBwO9IbRlFG
      mqaxUHIYSJiUfCh4QSO4eT3ETAMl8KgKnel8jWoIFW9zvjrS2IykNPJefYLGTIV8ocJUocbF
      G3kcL7gleaXbrtH1GsBShfP5zXcBW5U4JZfJPITrsH9esHa1i1Z1KSVzyz4/eq9G1Wtej5B3
      4PuXVMpX5lBrNfK1+ru8nq+SxWXAL6MSommCQ0aFWPEmFysh5yuwki8j+odQKyXUUoHC0a/y
      4f5vcPilv3FPlRPr4Z7omwYG+nn+oVG+e/bmhvdJ1eCHmad5aeUV0l3Smgxn6k4uj42PbKne
      wZ44gz3tgTKH2Vrwu6oqXJwtk7cU9JTChRt5nMEktapHeizDzYKHqmlr97YN3mmuVKYsVUrl
      MvGYTblSJRaPM5bsviMpq0qBVkG6UU1HH/ZZVXIFn+sk2ZNe2zdTg1ARbZZ0IQTFUGVFamRV
      jyGnxJvvJ0j1mdi2ykop5PRuwQdTAebUMgXPpahbrDgevusxW6wQs23ScRPfNNmrVZFhQNmp
      gvC5XpUY/T2Uaj66CrgO1/76W3zjn/wPG479vcQ9IQBFUfh7X/88Fec/8kqHMNz5Iit6hm/3
      fobnVl5lyM/f8bZsfdURPHR0F2EQ4EmFLz9ZJ76TE723vHJlYhalsouqCCpeiKUryHCTeAXq
      7JgQgjcuL7LkhuhhiG0bFMs1RgfTHOmrE1AptNizjj3g3Kwk47d7mkoJK2jsNZ2Gg+GwV4LZ
      ErVQkBLwcjFDfqGCHfgsFCu4rkKuUGRvbxpdUSgm0ljC44BaQSAQispje4aYx6Y/NFEVhb5d
      Q/jVGTzFI3Sdu+rduV3cM4uDruv82uee4Mz5PyET0ylVqoQo1NS1ros1Nc5f93yaZ3M/Zcxb
      6lLarWO7miBFVdcYWG9Vm7RQrHKz4tFrqKAJyhVJn72RCrCZVApA11TwBRNZi/cXquzvT+D7
      YUOWUEKo+AJTayeCfA0Wb1QYFXW1jeP5TMo4pggpLM2y3GOzUnUZsHUWaiETaRN9NeyzvOQQ
      q1QQisLhXcN1zVU2Vj+5JdvLLrOCQUAnNz1AFU0T3LQHGD/2EAvpDD1v/EeSn/3Fe2ro2gz3
      lBSHhgb5R7/2HPFgGUfEcYW1RssQfQ9Uix/1PMMF85YOVN0Q98s3qD+d4PRwD+O9acbTcY4O
      ZxmIbcDjrxq7IhvCRH+cAwMJhFB4/vAgtqpweDjZkFnGDIeZ2QpTHRrnmaJgKdC4FtpcDmxu
      KHHGDIe0rLBUdlguVtEImat6TOXKjfcQhiHDpoenmY02REExnqKRsgS22l2IF0AsrKFWcpBf
      5OijT3J55BSjx0/f8XG9HdxTUtR1nSdPn+D7P32XxRvL5AIbITyWpy5hpAbRhEd+aYlkNku5
      WERXJd+1DzKT6Ofp4ntsIfZ7U2w3+dUt1HBXihNCkElYZBIAdR1+anDt7rnPdpgvhOSsOGlT
      UnQF04shj1qFNfeGAnotDV9RWS57DCbrh5yrmtZQR/cIn+W4xUpFa2TUW1FMhKYxpm4cwWbJ
      gJh0KdY8im+/xmd/5W8wMrI1+e1e4Z7vRUIIDu4d481pDyECQEXXNUDgeT692RRVxSSW1Kgs
      ThEKk2uZfVTVGC8UzmDegWNR7wQR3CsXi9YattpuSwmZL8PleclCTeFgufvpPKqm8die/rYy
      J7KJqDKkhEnPwpIhqikphxYIwR7VxRKbO8nlMJgTcY5kshiJFBOH77/asxNCrvZeStlIeXe3
      UavV+Ksfvca/+eF5XN9naeYaumFhxDOUVpYwTQXXF1imSoBBKls/Wytbm+OF3GvrHoRRRaVi
      2cRXQw3r+XtWvTQ3aM+CNEgKv/Xosg50O5emiYqiM2TULbaOKyFoqlpazHqr5ayNf1sPgRAc
      HoX9ie4noq8PwesrNgPlEooArSOIYitu4qGEy55Nb+jWg3luEUtGhpnsPp7/8tfYd+LhWy7n
      buCepEbsBtM0eejQHr75/XMI1aRv7FDjNzuRXvfFLJtDfLfnaV7M/bQtaqwBAQPCpUd4je9b
      gRdI0l73gPLNIITAE2HDOTIOaxIBC6BP1LbtFOshuFmLo3ZLK9EomZbfBMOWR9FXmKuoKKGO
      AuRDDYO6EUwRoqlejTJXyLq2SRV1N2xfCq4HNn3C5aYwQYKLgi3q4ai+jOKON4dwHDIzH/Dq
      D1IPHAHAfWCBIqhqnd/sNoobbfV5o5/vZp7hs7lXSLZkfw5uJ953m9xQJ+vjKgavPfEP10Q1
      y6jwlSk+f/GbbGTS6pY2UUiYn3HxZa3u47RJeySwMhwjVBWOyiK6EhJISVrUaFU2bYWVmtCa
      dhhvlSD2GlWE73Y9OjU6dKK9TzAfWhiK5Cc356mUy8Ti3ROY3S/cN4XsrtER/vHXn0ZZJxHU
      Rvx10cjynZ5PU1Tq+m8J5M04vmmS4s6dE7Z1KAjNQGn51/xuIhQdJI2TSiINS+vfCK3aMJUQ
      TRGoq6uzts4/FYkmoCAMyq6gWJLERYAhJJaQGASNk9Pnl/O8Mb3MT68scH4ux0+u3WS54uL7
      fuOeCLlQ55IfY0ka7DWqGEKuOU6220HVDQiYUjKc6z/Nkcee4eLF9RPy3i/ctx1ACMFjJ4/y
      0rmr/NW789sOminrGf4q+ywvrfyYVFDFJmBMuTU2ZrvoXK3lFtouV++PDs24vJAj5wuMsIZU
      LZZqHp/Zna0fghcETRePLQxL1I5eXJaXYSwpQWkSU3NllpyZzqPaNgM63CjWEEo9mUDr6l0M
      VQpSx1JCjpjtmh5FUfjZtUV2ZROcv1lkT8rkUqHG4+P99FktPlGyLjc9JuapLCzy/vwlTp3+
      p5t35h7jvprkhBD8vV/7RT51MLPG/2QrqGgpvpN9jmU1ziYG1Q2xlQnc9bmozVtgKaIaouzJ
      tmGgEzJf9VmqeKQtA2U1bXpkKBJCYLS8oc3qCCVUTZN+zWsj0kh/r6oaXzo+xqMjaXRN48Rw
      mqShEzfUBgszHcbwhcIu3WGoJeGulLJxuqKlCq7nKtgi5EbRwVDA84PG7hbhZmjyg2CYwvBR
      nv713+HGdPdEyfcT990kpygKv/GlZzn7z/6YvKe1eYBuBVU1wfeyz/J08XXGad8BNnNdbrlz
      3Sxz611vbaMUG7ABLWh4ha7y83sGspwyBG4ABcdbFXbbtTTh6sQTQpArVwk1g6QSMOeE1ByH
      wZ40qVVn+pqiYygwE5isHb5VTZYQYNn0D6cIpGSXnaYAFALIhRqKABPJfGBRC+tnl5W8eqCO
      KgOkqmKaFY6mTeZWSoz3JriyVKbPVhshqBECRWckbrH3P/ldyuUSwz3dk43dT9x3AgAY6O9j
      uDdBfq4+gTsn3WbEUFPjTFpjnKwtN4LJI5fmpVKVhVqITYBhWRRKZXrTSfrt5vGdkXQZTbTo
      Jc7nCiSSKWaWVhhIJ1kpVdjdl0bpJKzt7iBCsKevmTPbVsDSum/GomUlT9sGM2WXguvhhJK0
      ZbJUrJDIxAgQzGkx9jolPIe2uIp5YbFbrTXaKVt+XlYt9ptVBNCr1hqhljOugVv2sJG0TdvA
      Y8nqZ9KXKKkk80hOjKxm5m1hoyqhgislOV9h+eYsJx+5O2lNbhcPBAEAPHZ4DMF15paKlDyB
      t1G64y6YNMaZrl1ijDLQXP2zcYt84FCpusw6JRTfx7AD+u215bfG00op6bU0FjyfhBVjoVgi
      Xw3YRZNvbMoAm3CS8SyXY7tJVm4yKpyu9LIeobeyREvFGjMll6wO1UAQVhwGMun6AXZoDIj6
      qNXZsmYZphLFFLQE+UQ6qlBiKmvr7dUDLpk2iVplDZ/c61UbqYuqVYULSYuDVnP3daXC8vEv
      cPqL36Cnp+eBcn7rxANBAEIIvvziU3zhuceoVCqs5Iv89//Pd8k5Yl0TVCebEgqVq2o/Y2Gd
      AKJBv7iQx1M00jEDUwpKZRdtNa13Z3nt1yTXiw5lXSCdKjHbxK94VAPoMbR2tmodAmhMaDPB
      pZO/hfQcJq/+kIHidZTQZSzIYWySETpo+bk/naS/47AFIQQ+grxisXeV+DvRTc/WSMeCxJVi
      TTviSsDhWJVzvkk6qLFSLJGTKqpbQbfiTC3lGepJsztl4ZVcLmBz0KpSk4LCU7/OC7/8YPj7
      b4b7YgnuBqdW4+233yUes5mYmEBVFWZn5/hf//B7zBSVxiq7HjvUW5vhN2s/vSVbwBXPJONv
      TYPUuVILIbgWG+Hmp/7+mns729qcEBIZhsQv/QArcLALN0C32V29wUxinKqRIhAqEysfUnR9
      ery1sRFRjEAYhsxrSYZFjYpTwxQhS64ko0EpFAzFTZYUi9FVDVnnalyWKomYIKt4XS3Ec77O
      ckliew7TVZ+sJqlgsJRbxtdiHO2r6/Wrik78xCOkh3Yx8cznGR0d3dJ43k/cN0twN1imyVNP
      tvOJw8ND/JP/7Ku8dvYSv/+ds23pFTsnoinddSf/nXSA61rOtle6ut985eBnqQDSr4FqMOUU
      UezmMaoLzrNY19+gsPAR49XZrm1RFIWy0AndAitVh8D1WPRCbnge4/09+KEEZf30MCYhxcAg
      q3R3txjSPPy4wdUZj2LNwxchUg3RdZN92XoIZgiM/8rf5fHPf+Vjseq34oEhgAhSSubn5xka
      GsIwTKZuTPPF55+kL5Pkf/p3rxKIJpvSmNhSctK7dhu13t5L6yYDrL/6d6l99fggYbefISzM
      BLUDn+GmajJ+tZ0AWtk1S6nnDrqWq9Bn6wRS0BczmS05DCTj6GL9xAGqkKs5U9fHqO5S7O9h
      xHG66s2rY0d49HNf+thNfngACUAIwdBqGrxcLkciUT9A7YmHj3Hox+/x4exadgAhOKvv5rC7
      1HUqb7r63+LJLM3n106LzdK5RPesh9ZnQ0WhbFiNZNqi1e1DAIFKzLJ4cd/a2AkHBUuBIAz4
      YGYZoevM58ukYxaBhCfGegk2jUqDg7bD+9ImVWuOvyM01D1HePa3fue+5va5HTxwBNCK3t5s
      g9cVQnBiop9rMx/Qm4rRk4wRN1X6e5KEbhX11Usot8rq3I4RTcp1DWndJnin28Nm9wAYhOzR
      ux9RKoSgKDVk0L0TVVTSq2Jw3LaYyCaI6xp9lsqr0zkkEPqSalDfSVrb1ebyIAQ9RkCtVnem
      qykG9ulnef43/z6Ju3iE0d3GA00AreGAAF//0ou8+NSpBlG0nu11eSTDyruvEFx6l4xc/zzb
      u9NQpavB7Fblju3KLHERUEEj1kXfEwhRP3dLSso1l2XHYyRlU3NdTo1kUYCUdJkPDIa8An9x
      aZGJpEFRKtgyAN3g9HCKMAzZrbu8a1gUjQxP/sZvc/Kxxz+WbE8rHmgC6IQQglgsRrFYBOoa
      kMiEf+jUI8iTpykU8lx75wz5d17BvnmVWJdT6rcKH8H1zD5QNx6mQqKd9djULWIL7FErQt1a
      N2O0BMqhyjBdWEPqfVAFoGo8NNI8xsjS7MbxtSWhM6p5TC9UqYXQl4ozNV+kP2MTyHbNUdxS
      OfHrv81Djz3BzwM+VgQA9WSz9ZMFg4YvjhAC0zSp1WpkMj0cf+YF5KeeZ35ultm3X6X8/mtk
      ygtom/A6OSPJ8OfqJ6NHK1uqZnI5HGS9g6U3Q2F+EmlmSCRsbk5eom9sH7mFOXr6elleXGFw
      1+62+7sRR234ISZnX2HCX1xT/qRfV+Gutw7LLRwM7gsFW0j2DfYwnE3h1FweH+tFDz2EbjTG
      IgS0E89y4tEH06p7K/hYEUBkrDIMo3FurZQSXdeJx+vH+UgpKRaLuK7LwOAQ/b/wVcKXfonJ
      SxfIv/8a1Zlra4xrfqhTClyIZ3joU8816hJCcDwI+N5r73OuYCO07WV6BolmxcmtLGJbQ3hO
      iWsfvkMmk+Cjd6/TNzy+tX4rKtd7jjGx8KOO0iEfaOxmfRvGVjgUDUkNBZuQmK4S0yPnh3Zr
      uYfK8Wc++7Fne1rxsSIAqE9M27ZxHKeZQWLVxTjy7UmlUjiOQz5fzyukKAoTBw/DwcPbrk9R
      FF568gSxt8/x5qKC2IQdaoOUXP/gDXr3nsBzSgS+iyJ08svLpLNZcvM3GNo9vqkSNggClvuP
      kZv7MQuLS2i6Rq5cI2GbTPshejpKiVj3TE1Kn8SqPBDteoGEKSVZJ/6OCVxCZ5gVNjx/Csj3
      HeDExP6t9/9jgI8lAWiaRiwWo1wuN9x0Pc9rs2JHK/itCqKdGpqnTx0mdeEaP7lawDdSGzzZ
      2liFw09/ntCvUnMFEyefWXvLFtui1kpooU9ME6z4kqG4jh23UQtFxo3mQiB1k2mnuXILZN1Q
      pihM73sJZ/TUmhVcypDXLnybvtJ1TL9CLHTQRT0gxyRAF/CT7NOM9qTQ9e35aD3o+NgRAKz6
      yRsGlUqla1QV1FOwqKspyG8Vrc8KIThxaIIwvMSPpn2EsvWhUzQbe4u3dyNYTdPoz18ioQmm
      fYmmKUhNJaZI3s5X6U8nSBoqvmbh6hZ4HgUslL4RfD+kOjhKrLKMefMjDEvF7tvF3ORFGDyK
      MGIIRWXl0C+y0tp33yP0a0ivhrJwEYYOE3prZZCPOz62BKBpGqZp4jh1/jdKox6tbpFgHF3f
      DFsxTgEcPzjBKxffIEjc+YRdrfV3tjmUsp6dbah5ZKSUkuf3N8/OckYPox98hPLlK3zuV36N
      XbvHG2UuLizwYibTWMHD8AUuXLzEt370BsX0AYSiglNgLK1xoyRQdBtF08FKQLKXsFamVA5x
      HAfbfvD8+m8VD66f6iZQFAXTbObUr1Qq1Gq1tlXbMIwtC2xbjUhTFIXd2bXJbHWvyD5zhTF1
      mRFlCelunDRqU3gOSmEapCQsLdIT5qjsf5yVzBg1FIqqTe7Qp6mozbZkpt8n9oN/TebmBQqL
      NxsqYiEE/QMDjfGIlAmHDx3kt//mL2GVbjARq/L1x0f5O1/+FF99eADRcZqk0EwcL2DqxoMX
      1XU7eGC8QW8FYRjieR6lUgnP81AUhXg8jq7r6Hr97IBSqdTYJTYrC9Z6S3ZDtVrlL1/7iBte
      GqFqSBnyRJ/DEyebQva75y7x8jUXzO5W0s0IU/o1TqeLWLbNE6dPkO2pHz0kpeTG9UnKSzfJ
      VRwyMYupf//P6XFWQAgKsT689CDHv/GfMza+Z9O+RH3vzPTwly+/wU+naihGfbUPKgWk7/DI
      nh6+9tknt1Tug44gCD7eBADNyK9isUitVrcAp1KpxsEU1Wq1IStshE4C2EyAllJy4cp1Xru0
      QDVQ+ZvPHiC56hIQrbIXrkzy5x9VGpMowlZ2pQxFvvrEBPv2Tmx4XxAEvPXyX1M9+wrW/oew
      M33YyRQf/n//kk/97n9Db//ApnV1g+/7fOfHZ/jZTIjQ6zlcQ6eIqSn8zi8+1CDIjzN+LggA
      mkSQz+fxPA9d10kkEqiqSq1WQ0pJpVJZIxB3Y3siAlAUZUtskZSScrlCItHMd9N6NvE3v/sW
      K2rzoLj1Jn/oVkGGIEMGTJevv/gII4P9Wx+Ejjb5noe+zRMqO3Hpwjn+jz95BWP8JLXCAlUX
      wuoK40aBZ04f56HTj5CMxzYv6AHFAxUPcDuIeNpUKsXKygqe51GtVkkkEsRiscbEL5XWnhHc
      ie0G5Qsh2iZ/axmKovDkgX7+4kKtYURbzwFOlBc4kvE4fuwIJx966LaMTUKI2578AGEo0MIK
      jidB6FQLc+iK5O1334XyCjUtwQtPPXjZ3raDj60QHKEz/Uf0vVar4Xlegzji8fga7UW3Sd6a
      mOp2bAgR9u8ZY5dZptXltLNcmZviWL/K1375K5w6efKBsbSK6gpXFqtIr8LClfeQik4YuIjE
      EIcP7mXXrgc/6mszfOx3gCjZlOd5bau3lBLP87Asq0EcqVQK0zQpl8sN4rhTkWLrQVEUvvyp
      Y/zf334bNza45vegtMiQkucrX/hVYrEHi53I7D7EQ2PvsuyWmDj9fOO63H+S4f0xDo7dmnzx
      IOFjvwNE8DyPcrncltakUqm0CcCRbcAwjK65LO8k2sI1DYNvPHsIUWk/7UaGASgqRw/seSB9
      6vt7sxw4dopEb3tOf6GovH118a4vHvcCPxcEELE4rXruiAjK5TKu67a9LNu2sSyrmaC3A7fD
      /qxXRiadJm10pFQMPOTchxw5dPC26rqbODCSqRNqB+bKkpsLH3/L8M8FAUCd1Ugmk6RSqYYb
      RBQsUyqVGkQQWZETiQSmaa67C9xpIhBCcHxXCsJm0IqiW2QGRlAeEJ6/G44f2s+e4P9v78yC
      5Djvw/7rc+579po9cd8HQZAgQVEmRUuWLUp2lFiSo3LsuFJ2quyqVMUvyWte8pBK5SlOylWx
      S6mKZLniyFFRlCPzFEGKAAEQBwEsrr3vue+e6SsPjV3s7vQsseSSWBDzq0KRvd399dc93/87
      /tc3gWXcT5MoiiKWGuLa2OxDrNnW8IURALjvIxSNRolGoytxqrquUyqV1qhBRVEkGAwSibRu
      dr3Msp9ROzbMjOxSxpG9O5DLc2t6VE103Li3K7Is89KXnkEuzaz8bTkF4vrGs3ottny83flC
      CcAyy718PB5fmVubprkm9ffydeunTG5sFL31IPeD02hUVeGPv/Usz/UZBJoZjHKaphJmIb21
      O2FuNUNDgzx9cGSdhszCq67VoUiShKIoa9NGbnMeeS3QRoiiiM/nW1GJGoaBoihrpj3Le/Cu
      Nl49KKsFAO7P7deXsbohKIrCycN7efKQY3i8NDpO5V6I53bm+RMHybz+B/l/KgAAHUlJREFU
      PjeLCqLHD3qD/p72G949SKewHfhCjgDrWW7cbtZgr9dLKBRaCbVstyhux/osD+2uXd8YloXz
      2ScOcuTQgQd+l4eF3+/jn33tNFFJQxAEEmqTgdRn4xH7efKFF4BlOwE4vf16xzhBEPB6vUQi
      EUKhUFv16EbTIMuyVmISNjKuuZUXi8Xub4axjVlWIR9ICI7Hq6dNEP4Dup9vF77QU6BlZFle
      mf/X63UCgUBLj7z8A3u9Xur1eouRbH2swWZ/5NUB/Ouf+6hQLBb5za+9BLTPeVSv11FV9ZHx
      KfvCjwCiKBIOh1c0LcuOc24NWBAEAoHAivV4PatVmg+iAXK7dyvUqw+DUqm0JklZO5ZDVB8V
      HosRYFnlKYoitVqNSqWy5m+rkSSJYDC40pu5jQLrF78P2qDXjwDbOW/+esLhj4+DdhwDgzSb
      zZYYg+3K9q/hFrGcVCsajWIYBpqmUalUXBvvsmep19sa+bXeUW55Ub1e591uLbD6/x8VTclm
      EF32XtjOPDYCAPfchBWFWCyGJElomrYSRLOeZcvy6tSM0OoteuPGDUzTZHZ2lnK5jKZp1Go1
      6vX6igGuWq1Sq9VW7l9dny8i61XN25lHo5ZbjCiKK/P8jX4oWZYJh8OuQrD832QyycLCAsFg
      cGWePDs7i2VZ5HI5kskkjUaDRqPxSDX4Ze1Wo9FYiapbtqcsT3EexbXMetZEhNXr9Udq+Po0
      PGgWCGDNj77M8vRleetQURRXvp/H41mJriuVSitqTp/Pt+Z5y5ktthuWZbW8L6xdwyyrix8F
      FW47bNu+LwAdOjyOPJZToA4dlukIQIfHmo4AdHis6QhAh8eaNQJwZ/Qq58+f5/b4TLvrHwjb
      tvjo+g3S6fSG1zVLi7x38QbYNtNTGz+zlh7n7pL7RtBuWHqVt958m4pm0KwVOXfuHJc+GsXQ
      qlQb9031tm2RzmS4fu3qx5ZpWwZXLp7ngw8+oNLY2Nxv6ho3bt1+4Pp2eDisUXBPzy/x4otf
      4cI7b5BP9TJ59SJqOEl/3MfN8VlGdu2llpsjXWxyYHeKa6NjDOzYSzk9Ra3RINE7gs+uMjmf
      oVjXiQRDlJYmuT6VR1U9HD8wwgcXLiN7Qzx5/BDNcoYrH41y8MBuZqZnEbAZGOxnfGIKvVai
      UtfQbQkLkUN9CpeuX6LYG+PY/hEufHiVZN8gimBQLxcZ2H0IDxoXPrxKONmLtzLJRFbjJHDz
      0mUGjjxNb0Dl5gf/yLV8gJdO7mFqMUcy2YWpNymVSuj1ErPZGmYlQ7ZqcuLoXi5evEyid5Bd
      w/1cOf8+A4eeJu5XsC2DW6MfgSeCrJdIF2ocOXaMqxfPYYsqR48c5MZHlynk8px46ik80qNj
      A3iccJkCCXRHVD46+x7jBYMPzp1lMZ3GMAwkWWJmMcNTTx7lvXfeRZJEzp59j0yxwhNPPMnM
      5F1u3p3m5Ikn8KkiM9MzVNIz9O4+SqOa4+L5Cxw5eQq9Wlp52qnnTvP+mTMAzEzPADYT45Nk
      C1WOHT+AVjdQDI2mILDnwBE8tTyv/fIMDSTOvn+W8dvXSAzswq+KXLxwkSNPPk1ufpru3j52
      7ztI0Ctz+JnTLI1e4s0zZ0ml+tl/+Cg+q8Rs0aI/GWF6do5Gtcgrv3iHVFeQ989fprpwiw9H
      J8mVNcR7tpFCXSeqmrz+0x9xfabA9bvT7BkZwDBMzPIi127PYioBju3r4+q1CfqHdzISF5gr
      NFs/c4dtwRoBMBtVLpw/z2gGnjg4TEiBw0eOEYvGUGWR6zduYjVqnL94lYGhQUzb5uiRowiC
      eG+jBwFbr3Hx0mXqzdVGI+d8TyLCubNnmVm8n01AUPwMRSWmczVEu8GFi5co1Rrc3zpCcP7Z
      cHf0KlMFjX0jgwi2xdFjR1H8YRJhJ59Of3eCc2fPUmlarDbnZZfm0JFpNhso/hBj1y5RqRt0
      d9/Pa+MJRDh1bBfXbs+S6u0i3LuLHX1xktEgN66PAnB41xBvvnsB0ePHr0p09/SAbXBnbBJF
      9YBlMTd5hw8ujtLX3/1IWX4fVz5XQ1g5l+bm2CSFSoNff+G5z+uxnxuWXuf9y6OcPvlopwt8
      nOhYgjs81nTUoB0eazoC0OGxpiMAHR5rOgKwzSksTvLGm28zNpsGbPJ5Zy9HQ6tSqjnq1YbW
      4I2332Vi7DaVexrXUmaWYn37Z2Z72DwWMcGPMtN3pzl+6iTnXn+Vy1dTdHkrFApVBMGk2vAA
      Jr/+zZeRzSqXPzhLT6nJ+dd/Rv+uHUS6Brhy9hy/8/0/ZKQn8rBfZVvS0QJtc5q1AucvXmPn
      7p0gB2hWlnjzFz9n+OCTdMeThII+oj19XP/wPH2pHkoVjVI+S2pwiEqtQTWXYf+xJ4gEWuOb
      O2yxADwq+SA7dFhmS9cAn2ZX9g4dHgafeA1QKWa5O7VIf6qHZqNBKtU+UWqHDtuVTywAfr8f
      0zDIZRYQ1chKfswfvPZDptMziILIv//un29lXTt02HLaCsDczCx3bt7k2Ze+guJyvlwu4/cH
      6En1YOpNBFFEtG1G9DEC2iiCILakE+nQYbvRtoUajTKyr306vEi8m0i8dZdAa/EA1nS4sxju
      8EjQVgBy2Wluf1Ti+OmTriNAOwpf9pCu+hCEjo2tw/anrQAEwz34IpVNNX6Ap7lLzb5D6w5S
      HTpsP1wFoFbMMj8/h2ZsPktcwtaJ0gS7IwAdtj+uAuALB4lFerElze30A2PbNucXbgEQ9vjZ
      Fx/8VOV16LDVuAqAIHho1HIgfXxO+PVM1HyUS0EQRE5hI4/+PwCk2CB2tJ9zf/mfAQgPDHPg
      5e98iqp36PDpcRUA2zaxpABBAUxwXQdUijnGphbpS3WjrzKEvTXuZXzejyiInPoS+OpdAKj+
      CBbwC81JprqzKWPP3OG//OyvAfidp77KN068sNXv16HDhrgKgNWsYFgW8+UqJ9rcqKoeYvEo
      pcwC9ipD2GrXIt00+KurbwCwe3g/f3TieX53r6M69cUj+AsNvvuhs0fujoHqI7W1TocvBq4C
      kJ2cZGx2npH+QWqA3+WaUqlArarRkxrGWmUI+z07QtOKgyAiSzIne58BoCeeWpN6XRAEgpbF
      3oKTIiXS1DuGsw6fO64tLjq0l98e2I0qy7TL/p7s6SfZ0/r3hDcA/ggIAjYQi0YBCAaCWDb8
      9w99AOzd4eH3T0conDwFgLev40vU4fPHVQAapSw/+cXbjAzt5NkvP7MpW0BeiqHLNggCXevO
      CYLNfuUiAAPSLpbEXv5OcaZAL0l1Wu3KHTp8trgKQKi7n2eOH2RsOsNmgwUKcpyaooBAiwCA
      wP5nnGYei0YoiSofeJ1h5IAU2OSTOnT49LSddPcMDhNNptisKUxJv45ndgwEEXiq5fztxjAA
      /XqSvk2W3aHDVtNWAIqZDIn+4U07NCg3c1iji9Bm87nApJPh2WsEYd0aIjOzQH7eySg9sH8n
      vlBnVOjw2dK2fdt6lX987R22UjFp2/DjMeffW3Ot5yetMc4Yr3PGeJ0SRRbKRSbzWabyuS2s
      RYcO92k7AmSLS0xfn8F42d0QVqsUyRRqBHwqjU8YEeaxBPo0Z5IVMkTqao1cwGnshmhw42//
      iuzMOKIkM/jv/hPmmR8DIMT6EA8+z9yP/wMA3r7dJF78F5t+focObQUgEU+x42h7Nag/GEYp
      1yhsYAgzTIN6+gIADWUnhvnMyjkbm3gdvrXkWBl2VSQadZGBsrNtqKzb9NfHiNZuIEgyumHw
      8w8XAEgOeTi5z+ZHsX8OwHDAzz/RGtgVx3dJ8Kng2awfa4fHkbbeoFdGx5EFDzq4LoQrxTyZ
      TI6B4WFs474hbHUgjCRJzAlOIidBqKIoMt/+9osA9IVURKm+cq0oCiTmRHaedY79OyTG+gsU
      5CUEUUEUJc5OTAKwx+PjWUngy7WfAhAJ7WB8fi8/+Lv/CMDXnv89TsSOUZ1wdp2JP30M5fpl
      KBRAEuE3fuuTf7EOXyhcBcAfSTDYHafUkNpqgYKROEeOxD/2AcPmuwAkLANsm9z4Tef+7ij0
      J9dc28VlIsKPnDqwcSMVbIsDU/8TAEl4DrPnEN8rOPXpafio1kQyWWcUCBkC80tFGktZBEli
      98fWusPjQtspkGlZeDy+TRf43qHTzEf3IIgCf7LunA18NF0DwBJ8PN//4OUKgkBq9wgAiVSr
      CVqu6YTvFABQn9LQ1jmyvh2cZb4xgywp/Fvg4l//hPLcEqIi86U//0P0937uPCfejXLo6Qev
      WIdHmrYC4FUE3r14jWOnTmzKEuw98iSBHfrK/i7F6XuuDsoBBOAb+5w1QndycyY2AZNnrB8C
      ELafAV7e1P23mne427iFIjmrmrl9u8n09CJJIl9CQDAd+4RghjCLczTu/BIApf84lxZqXL1x
      A4Bvfe3rXHvjDMWlDJIi840//gPGsnfQdA1RENnfvR8KzlQNxY8hRGjMO9ZuNRmhblapFpxp
      YXJgBMXTydj2MGkrAF2pIXqm8nya0HYBgai5H4CgPYgAHBScXtqPB9FbRBl8HwAx3A31diWB
      bYtcmTkMQL9vmD3rzpfDIa6cOArA/p4uQh9Xt1gKQTVwi92XjAr+0nXnoGuAzFSWO+fOAaA9
      9zwev4o35EW657xXuXGGanEBUVbRX9jF3/zFfwNgYM8Bjp88xe17Lt+Dz38T3aixcO09AMLf
      +tcsXCyydHUcgAPffo6bv3yFajaNpKqc+v6/Yu5dR/PlTQ4S6xvCuPkPAMgjz2HG91MpO86E
      4WgMubYIZtMxQkaHP+YLdIA2AlAtpBm9M4HH4920K0S0cgerkL+3GP4qAyPHAAj2tK4X8gR5
      W3QatVfoYqxg8NbUSwD8SeNjkrkKIqV93wPAk9xJJRzi6pPOsxK93dxavMNbJaeh/Zk5sMm3
      2JjGpEV91kRSHem5oO5hwduDIkk8IcPSN51ePRhS8dUEhibvqXqPCcymhikNOF/VVAIU87PM
      TDp7pu1qGhTnIhTnTWSPgmDqhM87AiDvfgbL8yzN9//CeX1PiBkhxKsfOlO37z33Xf7PazdY
      zJbweRT+7Hu9/OBV594dqSH6uw7yw9c+AuDl03tQZYlbM47K+TdP7UZYmqI2PwtA8vhTFPFg
      WDaiAN3BdrrARx9XARAFgUZDI9zd01YN2o7J6BVm1SkEBL7OS9xM/C8AusMHGeI4ry04mplB
      UeLF4R18J+yMCClVY6OdegUBnkg4IZWhSBc2sDDv/IBhsYvwgM3eBcdsF++1mVBmmPGdB6Ap
      /i5fz+yiMO9BlDevHj0RijLUOwRAQlG5u9HFtkhw1ul9fd3dWNRozk0BYFZKnCve5tV5R3u1
      S9+LadfRbWdKZLM2nXlDVPmvx/8UgD3Jbo53+fm/L30bgBf6dhO0/ZTVnU7ZgorU70WO6Eiy
      gmBaKHecqZgk+DD8GtW7TgPXD6W4mq3ys185+xifPjRALv8P3J3+ewC+euh/kLz1M6gugeLH
      fPbfMD7+lwAEA3sI6UMsvfs3zvc4+U3k3l1kF53Q11jXTrLpadJzdwA4dPK30HI6ZtNAlESi
      g0kKuXtTQo+HYGjzUYdbiXtIpKTQ29sHyFi4m4tz6Xmml4r093atSY14pFJjpFi65wsE/qxj
      B/B4ZQTghOlMUyJWApE4XvulexUZQOyqI+1zen7BJ3M5+zJT808iSSJfs228Y5cBUL0Ctg2z
      E44WqSlHSNhlkvoVAHxWgv1yN5b3AABR0ceN0hLp3AzSPQFQqhdQSzkkUQL+6Zp3y1Zkrl53
      6rEz6kFDZPaer+oAMu8mlpg0F/AoCi8D/zI3A7klkFXq5ou8+o7jwvHUfg9fPqFi9iQAsAM+
      ToR7iPYdBCCueHmDED+95xNyAgUtrlE36ige00k0dm9z8G61wfrIDJ9lk2rqzvvYNr7GDMF6
      Bo/iRVBOE3jROeeNGvhlieH9QQBCMYVIVaA/5IxgsgRDFZFoxmkOPhN+OlOikM/j8Tb57acU
      fjX6FQCG+iKcDt0gueAIi6d2CKM4BJedjozjDRZnbnL76lsA7Dn8a7xSeYe8lscv+/kj/Tso
      l38FgNTTzxV/mL996xcAfOv0rzHi8TB6xjnec+oFrOlxcledNrT3D/6U0b9/FS2fRw0EOfz7
      3+fuT5yAq/BIiuTJvVw/+78BiHXvYDi0Ay5fcup15CjjQpF0zumAj+77MpNnP/rk2aFnZqZR
      bcjUSqhqhJ3DKUzTpHLpBlalBoKA96nDzF56EwA1GKV330nGJx1jlt/vJR7yoxVqSKKE5JPR
      sahUnB88nojiaeYwG1UQBKT4ThrFGwgCSGoIW+njo/k5REnCL8t0+cNMLZUxTZPeeJBe1cYs
      Fp17u7ppNmbA0hAlGcG3C8rzSLaOaVkQHsYcdXpHIehBSwWYyIwhCNAbSeExVRqahiiKBEIh
      6tXqiuEvlkiiT53HqBUQRBnvvhe4dtv56JFQlKgcY+qyo/rt3TuMV1WoZZyRK7ZriHKzTKnq
      HPclhwgWbyIZdWxBop48gX2v17b9Xpq9AbLNDJZpEvMm0EsSt2/OA3D42BBeYR7BbmJaIAV3
      MVefwTJN/EqQiKBSzNxyApGiI9SKCvWiYzjs2pGgUK2SL5YBGBnopbxwhWajgiSp9Ow4RbN0
      C0EUkJQwetWkfMdZuwVHTuCJ9iDU01imhRBIojSaiLUiAM3kIHONRQzbQBZletQe7IXLCIKA
      7Ymih5Lky84aKOQfwG5WWZx1yu5OPUVIDSPoVQTACqa4O7GIrhtIksTeXQOomQoAllehGfIw
      Ne+MtqFACI8qks44ZScTw1RyebJpxwdn3+GnmSpNf3IBqJXyTKeLpLqT6HqTWDyOZZpror46
      dNjubOn+AGZHADo8Ymx5EK5p3l/Ird8wY6PjzVz7MMv+tGWt5mGWtV3q8bDL2lIBEAQBcVUc
      gGVZbY9t28a27ZXjja7dbFmfpuytKsuydJpNUFXpc3nn++ds6jUNj9fzUL79Jy3LNJropoCq
      SK5l1Wv1Dd9po3pptTqy14Pkcu2W5i9cXZnlY9vSOPveB4yNT685v1pYGrU6tsu9y9Rrddey
      c7MzXL72IfNL5U2XbRp1rl+7Sbla3/Bea51QP0i92h0/+DvbrmVbepWZuQxaOcNCttq2Xhsd
      W6ZOo2m43Gvy5iuvcObCZdd7lyZv87NXXmEmXWn7Tlqt3hIIdf9ai3pNe+Dv86DvpGtlRkdH
      mZ5Lf4KyjM8hg63gIRCUkdVW/XuzoWF+4iWIjaiKYEh4/e7WCtu2MEz3kB5RlBEFE8Pc/LZO
      tm1hGAaG5b4NaXZ2hivXrlKoNDaol/u9tm2TzWapN1rvldQAzVqW8dkcyVhrtJzZrPHuL99h
      Lp13LdsymmQzGXTT7ZuLnHz+NPtG3C3IgWiMHbv30hV1S5KzETa1aoVyuUxD112vKOWyjE9O
      0DRaf4tCNs309DSVunuaTklW8agKPn+rS0khvcD45BS5YqlN3aTPXgBsW2NmOkOtUm45pygy
      lz44S7pQbuNyYfPOq69w9tqoyzkBn99PMBhAkd0X3ndGR7l7Zxy3pmZZOk3dZGFh0fXeW9fO
      8+qrb7lGxBm6ztidm8wvuUeqef0SesNCbKMQuD16g7t3x3ATPbNZ4ex751h0acSmXqfeFIn6
      RfKlVr8RG4FEVxd+r3uHkJmb5OLlq5SrTZezNmN3J5Ak9yZhmRZ6o0GjTfKyhbkZivdU2K0Y
      jN2dwedz93sSsJAkhXZ9oXVvOuOGrlUoVXW8Lh1sJNGFgsFSOut6b7mY/ewFQBBUjhzdT3dP
      qwen3tDYd+QEA6nuthUZOXiQAztGXM81a3UM26CuufcsiUQcQxRdnflE0UOjmsdqs49BsneE
      HbtTrpbweq1MJlsiEgq63mvoNg1NQ2jjSBKPxwhGoq6u5pLi58ixQwz097acE0SJUMCLLXnx
      Kq31NgwD29TbvlO0q4/9+w+SiLp7+VqGxsS0S6wqoPr8qLJ7N6XVyiwsptF1d+HQ6g3C4QC6
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Descending Number of Strikes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Descending Number of Strikes Graph' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Strikes and Cost by State' width='192'>
      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
      2O+I7iFSQAMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Strikes by State' width='192'>
      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
      hAq+igAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Strikes vs Time of Day' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADZklEQVR4nO3ay2pdBRiG4T+7J2qTVnRSiogITrwAcSZ4Z15AL8dr6EBFqBSxB/FUxPRg
      Q0yzm+5mO3GgsKfZAd/nma01+gbrZR1YO+v1ej0QtTjvAXCeBEDaxX8f3Ln9xfz56P55bYGt
      +08Azx/+MPt3vzmvLbB1mx+BFouZnS0vgXNwcdPJW59+PovTo3nx+OmcLg/m5PDFzCxmtVxu
      eR6crY0BHO8/nivXb8zurffn6tWZ1YXdeXLny1ltex2csY0BrF6vZvno3iyuvTsHy8PZvfXe
      LF+6/Pn/2RjA0eOfZr0+nfXBX7O4dGmW9+7OzmIx69P17FxYzPrNm23vhDOxMYDrH348e+9c
      nd++/W5ufvLZrP64Pxd29+bk9eXZWT6bpw8ebnsnnImNX4FeL1/N/t2vZ33ycl49+XX2H/w4
      J8cnc/na3tz44KNtb4Qzs/EO8OrJL7NaXZm9m7tz8PPDuXjt7dmZxTy799Uc7b217Y1wZja/
      BB+/nJmZw9+P/jlzPE+/fz4zMyeHB1sZBtvgXyDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBEDa371ed6khAnXdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overall Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVOElEQVR4nO3d2XcU55nH8W/13q2Wulsr2lgk9h3MYoyxAWMzsZM4yficzJyTk0nOTO7m
      zlfjPyBnLmfu5yKTTMbJhDBOHMYWZjH7jlgkkATaWgutrdVS70tVzYWQgpFAot1Iaur5nMNR
      0y1VvRzVj3rfqnqfV9F1XUcIA1IURTEtdCOEWEgSAGFoCxqAcDi8kLsXYmEDEIvFFnL3QkgX
      aBpdJ51OkUqlUFUNTVNJpzMTXzOZF9kQ6XSal3GJQde0b2xb01Q0LTc7UhNh2v396I/3o2ra
      nNukztAGTVOJDnXTNRjJSftyTQLwtOQg//av/87nf/k/2npHOHH0Nxy/1sy5Y7/ly4vNM/5I
      951z9D3Vm1PHHvDJx//C7b5sz3IpLl64MuMnLWeO8rsvr5J8fGy2nD3O1Y7BLPfzTXcvnSRu
      KkQBBtuvcvxs6xOfJrl44epTP5Hh9u279DSe5MTd/mnba73YwK2gwtWTx0kvwuuNloVuwGJk
      sTnweL1YMyFOX7vNrgNVXL58i1XvrOXMsSP4QxoHDr3F1RPHsVcto//cn0msivP+lnJMZatZ
      Uebi4bUb7Pvhd2m/34qnv4/zXWlSsThuJcqKPe8TbD7HcFRn39t76RiMs60sSWfYRvOdO+jJ
      CCs3beSzI38gYS3k4K71NF1s4FbHMMvXb6Tx5BXcu76PDly/eo5Ll+/y2kcbOf35EXrGFb7z
      3hY+++NFsKYp8xaieZaztSzNlXvt1G0+iClwkwcD4/iWbqDaNExz9xAbdh1ic3059/si/O3b
      Nk5+9nu6HvVTuu4g57/8E/5gktWrqzh65M9obg/OUCct/mF2Hv6AwKMAvjJAS3Dmiz/RF0qx
      9+293Dh7mkd9/Wz93g5WeqK0DmfYWLa4Djk5A8zAXVzJxo0bqKpZzsr1m/nB4QOs3biZt7aV
      cfJUM2Si9LfdIrNsL3/z1pts276O/e+8S926Lawoc4Gucf7mfQKdrdy9c4vQSIDVO9/Grjt4
      d+9abt64Tsy9nPf3LOf6tXsMjI6TjIwyOhYmbitj/+ZaQiYf6zdv5cDOdYDKrYeP+PGPDtHR
      5GfDhvW8fXAfTjPUFyU5uHsjptgI97uH6W1vYSA4gtm7iiXFDl7b9x7jgSba29pJxELcvXmD
      e36VD76zl7HAQ04cv4yqqoxHogBkFBXrmJ92tZIP3nkdW6SPhvPNaJkUjrKlbNy8lb3rltDa
      3kd4yE+rf4iBwAA6oAa7OX6tBS2dpvf+Fah5jQO71gPgKjATjiQX7pf6DBKApykWSAzw9anT
      dPSPUlxcAih4fMVYHVVs2VyOxVlI6YqNqA++5ouz1ylbWs+VU1/Q0XKbzqEYeipI8fp3+cXP
      /5E313rJWD24HVZKSn1YHYXULl+FefQBn59rY8uuTWR6mrjQ1ENhgYtSXxE2VxFFLjcVBSlO
      XW8BzKyvLebTIw3UbFiD11eMzTzR3NZRuPEggNNuwWS2UFldg8PhorS4EI+3GLvNQklxMSgK
      hcUVlJdXsqQgzOfHThLXfWzfXo9ituEucABQqJgZd1VSEn3IqWutOJfUsWNNBRa7C6ejEK8l
      zIU77SgmhdIlNRS57PiKfdhchXir6ti+rBSr08WS+o2Mt17kxsNBCuwWAkMqtRUFC/ZrfRZl
      Ie8EDwwMUFFRsVC7NyiVOxdPc78nyNa977GmxvuNT/vuX6I9Wcm+rctRcrTHxGgnxy7186P3
      9+Zsm7mgKIryjQBomoY2x1F/LgwPD1NaWjpv+xNzoGukMio2qzV3m8ykSCsWbObF1eGwWq3K
      N0YksViMRCIxbw2IxWKEQqF525+Yu5dxh2Yx3vX5RgDcbjdut3vedq6qqpwBxIJaXOckIeaZ
      BEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAY2uJ6NnWONE2jvb2d7u5uqqurWb16NWazeaGb
      JfJQXgagv7+fM2fOoGkanZ2d2Gw26uvrF7pZIg/lZRdofHx86qE9XdcZGxtb4BaJfJWXAaiu
      rp56ZsnpdLJ06dIFbpHIV3k5H0DXdRKJBMPDw5SUlOB0OlGUxfSkucgHiqIoeTkGUBQFp9NJ
      bW3tQjdF5LncdYG0BCf+eIRAQuX+9QscbzhObzDOlYbP6Imk0ZNBPv3jlzkr3yFELuTmDKDr
      dLe1UVZdQSYWIu6u5eBGH/c6evAuKWegoxdbURqHe2Le6ZOzzuZzBpoQT8tJAJLhAe51BHBp
      YdJFZVgsbkABdLB4sGdCBCMWSrwTA9fJYYeu6xIAsaByEgCLy8eundsYeHAHc1kVsQc3OdmZ
      ZNWWPaSDvVQWwZ2giyJLCmDqppWiKFgseTkMEa+IvLwKJEQuyPoAwvAkAMLQJADC0CQAwtAk
      AMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC
      0CQAwtByEgBdS9Ny+xpnzl1kNJah8951Tp36mq6BMVpuXiOUUtHVGBevNKIt3BRkIabJzRlA
      V6hdvYmtq8vp8j8imrTx1oH9LK/woKWDdHaPEB4coHtgCOT4F4tITmqSKGYL0aGHNLX3s3rz
      DoZbOzlz6iRL127D7K5GjwYYUaGsxAtAJpOZqgmUSqVy0QRhQKFQiGQySXl5eda1YXMSgEwq
      QcbsZv2q5fR2d1NWs4IKkvSPjuJWFCrsSdpiHjyO9MROH9cCMplM2Gy2XDRBGMy9e/e4ePEi
      mqZRX1/P/v37s1okJScBMJstqMkowYTChk3riQ33EgjpbFhbRyYexW5VcCQUzKSRIs4iF1pa
      WqaqCvb09BAOh/F6vS+8nZx1gWrr1jBZq9lZuYySysd/KSwEoMSRiz0JMaGoqIjh4WEA7HY7
      drs9q+1IXUKRl9544w0cDgfxeJwtW7bgcGT3P6yURhSGJaURheFJAIShSQCEoUkAhKFJAISh
      SQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAISh5aYwViZB
      49XznDp5gs6BcdoaL/PVVyfoDyW4fuIv9EUz6MlRjvzpKzRNCgOJxSM3c4LNdtZv2sZgXyeR
      0QAx+xL27/Vxv6sHd6mHQEcfNk8Kk31id0/Owpyc2S/EQshNVQhFITY2zFA4hbfQSlK3YDJb
      AA3FWow1E2QkbKHUN1EhQtO0qcJYqqrmoglCZCU3hbESUTq6/MSSKmZXMdpIO2d60ixduxN1
      tJdKt86dUSdFlokqcJMFjEwmE1arNRdNECIrOakKoes6aiaDpoPFagFNI6PpWC0WdF1DUUDT
      QWHibDFZxk6qQoiFpCiKkrMukOXJ/8nNZmzmyc8mxtlmqQgnFiG5DCoMTQIgDE0CIAxNAiAM
      TQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0C
      IAwtRwHQyaRTxOJxNF0nnUoSi8VIZ1RSySSaroOuk0ymWMCF6YWYJjcByCS5d/cWt65f5V5H
      gNuXv6bxdhODoRjXv/pfHg4nyEQG+PUfjiHHv1hMclYYa9O2HfR2toLLTDCq4VzixFdUQGTZ
      SsL9fgYLNSqXlAGgqupUXaB0Op2TJgiRjdwEAI2u1hZcFcso97oo3rePZDRIU8tDPGYnLi3K
      YMROsccJTNQDmvxqseSoCUJkISdHn5aM0O73Y+ofZGzFKhLBHobHEtRt2I4pFsTrtNI6WoDP
      FgaYqgv09Gsh5ltOCmNlSwpjiYWkKJNVq4QwKAmAMDQJgDC0WQKg0th4CzUe5Ojvf8vRhgtI
      NX/xKnlOADJ03LvC8S8v8Ocj/0PcVcno/Zvc6epHKvqLV8VzLoNaqFv/Ogf6h+iMOPn+4be4
      c9XOpuVVmOevfUK8VLNeBp38WFFA13N73V4ug4qFNIf1AeKcbzhNKD3R6bE5S3n70B4c89A4
      IZ4nlUrR1tZGIpFg9erVFBUVZbWdWQJgZc2mLSQfL2RntjiQBY3EYnD9+nWampoA6Onp4YMP
      PsBms73wduZwJ1jlwue/5tjlASoqK/nFP/8DrmxaPAPpAonZfPLJJ0QikWnvR6NRMpkMqqpi
      tVpxu90zds8//vhjli1bNuO257hEkk5aK6C+rhrSyBUgMa9++ctfzvj+jRs3uHnzJn6/n927
      d3P48OGsFlycQwBMrNqyi3U26OgZw/7CuxAi97Zs2UJpaSlnz57l0KFDWa82Ouud4P4Ht/jv
      X33K5butNN28QzKr3QiRWxaLhWXLllFaWorDkf1lmVnPAIUllWx7bStF5eXs3LGHwqx3JcTi
      M+sZoLC4Aq8zRsv9Vo59cRqZvyVeJXN4GE4jNJphxxt78WZiJF5+m4SYN7MEIE1oNMGu/XsY
      eNjKurf2SxdIvFJmCcAop483Yi+q4I19+1hVU4oUdRCvklkGwTrtdy5yVOsFwO6q4DsfHsQ5
      Dw0TYj7MEoAC3v/7v2P9xpnvpP2VTmigl+6BMKvWrUUbH6BzIMLatasY8ndSXLsMh0nlYUc/
      9XVLZSK8WDRmCYCb9RsLUFUVk9mMrqooZjPTDt9MkmBco7LUxYPWFhLRONXlLu6396P33WbY
      VMIq1xgXGpupW7EUOf7FYjGHO8EqTVdvs2bPa3RcvUHtnl3TB8IWB7VLSmjv6KS6tJhHLh+V
      1R6C7X4cZXVEg90MJmBJWTEAmUxmqjBWKpXK+T9KGIeqqt/qGJpTXSDL49vMJotl5lGzmqS9
      vYealetwKzHa+3qIeTV0nICK1xKjN1qIt2BiO5PFsEwmU1ZP8AkxyWw2f6tjaNYAtF49ya9+
      00DNtVU43TX8bOf2ad+jqRlCowH6LwSoWbWRujIrt1oDvLZjG7HRYQocoIQt2EhI90csKrMG
      YM2uQ/yTbQmesiL8QXXG+QAmWwGvv3ngiXfKKFs68cpVXg7AiuzmKwjxUs2hC6Thb+ugp2kM
      R8LG6k0r8b78dgnxXLquEw6HicVi6Lqe9ZXFOQTAwoqVPqLBKipcGu6sdiNEbj148IALFy7Q
      1dVFaWkp+/btmyq6/CLm9hMKjHQ30zeuT78EKsQCaGpqIp1Oo2kanZ2djI+PZ7WdOQQgw8O2
      QX7wk59jH+pi+uQ0Ieaf2/3XvojNZsv6StCsXaBUSmfztjqOffqfeJdvRsayYjHYs2cPVquV
      aDTK/v37cTqze0BnljNAlJMNF1iyegc//dlPcY0/ksehxaJQWFjIgQMHWLt2LVVVVVkPgmcJ
      gIlgoItQLE0qMkLXQEjGAOKVMksXyMl3v7ePL49+SkpxcOiHH0pRLPFKmXUM4Fmykh//ZOV8
      tEWIeSfrAwhDkwCIvBQKhWhoaKCpqYnu7u6sF2CXAIi8dPnyZbq7uxkfH+f8+fPEYrGstiMB
      EHkpHo9Pvc5kMlkvuC7LpIpF7ejRoyST0+sRhkIh0uk0uq5jMpnw+XyYzdOXbnnvvfcoKSmZ
      cdtzLI4rxMLZvXs3mjZ9Zbqenp6pmWAmk4nq6uoZH4d48pGJmUgXSOSlJxfEcDqdWRfHlTOA
      yEtFRUU4nU5UVcXhcLzM+QBCLD6KouRkPnmOAqCj6xOL6JlMCrqmoek6iskEj2frKDDxnqJI
      XSCxaORmDKClaWu6zflrdwCd62e/5My5C/QMjXPxL7/jYTBJJjrIf/zXZyzcNSchpsvNGcBk
      Y82mrWjNzUCKZNpKaXUF5b5CEitWMt7rZ7BIpbKyDJio5TJZFyjb67fCGDRNm/EqkKZphMNh
      VFWlqKhoqtTO01RVfe4xlvsxgG5ly84dRMNBmls7KDQV4NQiDEfsFHsnltczmUxT129nunYr
      xKRndZmDwSDhcBiYuClWVVU145zg2Y6x3AQgk6DxxnU6+wbRbC7SoX5GxhMsX7cdczyIz2nm
      /mgB3gJl2j8qm4nMwjieFYAnb45NrhY504GuKMpzj7HcBMDiYNvuN9k29caKJz70AfB6VU72
      JAQwcYMrGAwCYLfbn9kFmo1cBhV5yev1YrfbUVUVl8uVdU9CAiDyUiqVYnR0FFWdWLn6WQtl
      zyYvA6BpGt3d3fT09FBZWUl9fb2MJQxmZGSERCIx9drhcLyshbIXn0AgwKlTp1BVlba2NiwW
      CytWrJj9B8Ur48lLo7quG2tCzJOnPk3TpgZDwjh8Ph8WiwWz2YzH4zHWw3BVVVW4XC5isRgO
      h4Pa2tqFbpKYZy6Xi+rqanRdx2KxGOthOK/Xy4cffsjg4CClpaXfeDRWGMfkDdVvIy8DoCgK
      hYWFFBbKqsVGFY/HGR4eRlVVfD4fHo8nq7NAXo4BhBgZGZmqDh0MBrN+piwvzwDCOLo6O2c8
      uLv9fjKP31cUhUQ8jt1un/Z9Ho9nxvcnyRlALGqTT4M+/cfn9aIoCrqu43a7sVgsM37fbM/f
      yxlA5KWCggIcDgeapmG1Wo11FUgIRVGyfgDuSdIFEoYmARCGJgEQhiYBEIYmARCGJleBRF7S
      NI14PI6qqhQUFGRdXCFHZwCdRCREYHgMgGhokLaH3aQ1GOzrJalqoGfw+/u/9cNLQsBEdehA
      IMDQ0BADAwMzlk6Zi5wVxgoMjtLf6wc1RlNLF2Z1jNbOAH2tV3nwKEoyGODk5ZtSGEvkxJMr
      w8fj8alK0S8qZ4WxltetIN7cjJ6I4iqvZXmNh+Z2P66KlUSHugi4FaoqSoGJMhaThbGybbgw
      hmcVxnra5PH0tHQm89xjLOdjAMVqIz42TMIHOg5AxWOJ0R914y2YmLUzeQfPZDLlpMCpeHWZ
      TKYZ53sXFRUxOjoKgMPhwG63z/h9VovlucdYTgtjDYaiaE4fS71w414v23ZsJz46hNtRjBa2
      YieO1MUVL2I8HJ5xhRjFZKLI46Grq4v6+nrGH1eJe1rm8dTZZ5ElkkReCgaDXLp0iaamJj76
      6CPq6upe+IE4RVEUuQ8g8tKVK1fo6+sjEolw6dIlWSVSGEv4iS5POp2eqhH0oiQAIi89OeCd
      rQDuc7eTqwYJMZ/q6+un+vzl5eVZF0iQRyFEXtq8eTNlZWWcOXOGd955J+vJMXIGEHlJ0zQS
      iQTpdHqqSmA2JAAiLzU2NnLq1Cna29s5ceJE1mVRJAAiL/n9/qnXwWCQSCSS1XYkACIv1dTU
      TL32+XwUFBRktZ28HQSnUilCodCshY/Eq2n79u2YzWZSqRQHDx7M+pmyvAxAJBKhoaGBUCiE
      2+3m8OHDeL3ehW6WmEddXV00NzczNDREY2Mjb775Zlb3Av4f4JhzBz1NDf4AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      AWx9nspmwoWSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Strikes Impact on Flights' width='192'>
      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
      EwEQFO3/A24Xg5tPHjupAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Strikes and Costs with Species' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Time of Day vs Avg Cost by Strike vs animals' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
