<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='FAA Wildlife Strikes (faa_data_subset)' inline='true' name='federated.0l8kfds13a2v2218ok04311yqyur' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='faa_data_subset' name='excel-direct.037cum10p2l1pl14knl1w0gf8v9m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Downloads/Chrome/DS/Tableau/Project/Project Files - Tableau - Option 2-20230915T181500Z-001/Project Files - Tableau - Option 2/faa_data_subset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.037cum10p2l1pl14knl1w0gf8v9m' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Airport: Code' ordinal='0' />
            <column datatype='string' name='Airport: Name' ordinal='1' />
            <column datatype='string' name='Origin State' ordinal='2' />
            <column datatype='string' name='Origin State Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Aircraft: Type' ordinal='5' />
            <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
            <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
            <column datatype='string' name='When: Time of day' ordinal='8' />
            <column datatype='string' name='When: Phase of flight' ordinal='9' />
            <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
            <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
            <column datatype='integer' name='Cost: Total $' ordinal='14' />
            <column datatype='real' name='Days' ordinal='15' />
            <column datatype='integer' name='Feet above ground' ordinal='16' />
            <column datatype='real' name='Miles from airport' ordinal='17' />
            <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
            <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
            <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
            <column datatype='string' name='Wildlife: Species' ordinal='21' />
            <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
            <column datatype='integer' name='Number of Strikes' ordinal='23' />
            <column datatype='integer' name='Record ID' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.037cum10p2l1pl14knl1w0gf8v9m' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Airport: Code' ordinal='0' />
            <column datatype='string' name='Airport: Name' ordinal='1' />
            <column datatype='string' name='Origin State' ordinal='2' />
            <column datatype='string' name='Origin State Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Aircraft: Type' ordinal='5' />
            <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
            <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
            <column datatype='string' name='When: Time of day' ordinal='8' />
            <column datatype='string' name='When: Phase of flight' ordinal='9' />
            <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
            <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
            <column datatype='integer' name='Cost: Total $' ordinal='14' />
            <column datatype='real' name='Days' ordinal='15' />
            <column datatype='integer' name='Feet above ground' ordinal='16' />
            <column datatype='real' name='Miles from airport' ordinal='17' />
            <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
            <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
            <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
            <column datatype='string' name='Wildlife: Species' ordinal='21' />
            <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
            <column datatype='integer' name='Number of Strikes' ordinal='23' />
            <column datatype='integer' name='Record ID' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y10001:no:A1:Y10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Code]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Airport: Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Name]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Airport: Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Origin State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State Code]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Origin State Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Type]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Aircraft: Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Number of engines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aircraft: Number of engines]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Aircraft: Number of engines</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Collision Date and Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Collision Date and Time]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Collision Date and Time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Time of day</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Time of day]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>When: Time of day</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Phase of flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Phase of flight]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>When: Phase of flight</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Amount of damage (detailed)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Amount of damage (detailed)]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Amount of damage (detailed)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Impact to flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Impact to flight]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Impact to flight</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Indicated Damage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Indicated Damage]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Indicated Damage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Aircraft time out of service (hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost: Aircraft time out of service (hours)]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Cost: Aircraft time out of service (hours)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Total $</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost: Total $]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Cost: Total $</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Days]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Days</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feet above ground</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feet above ground]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Feet above ground</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miles from airport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Miles from airport]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Miles from airport</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Animal Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Animal Category]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Animal Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species Order</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species Order]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species Order</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species Group]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species Group</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species ID]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Strikes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Strikes]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Number of Strikes</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Record ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Record ID]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Record ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
      <column caption='Effect: Impact to flight (copy)' datatype='string' name='[Effect: Impact to flight (copy)_1755559432102768640]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Effect: Impact to flight]' />
      </column>
      <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
      <column datatype='string' name='[Origin State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Record ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
      <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
      <column datatype='string' name='[Wildlife: Species Order]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='FAA Wildlife Strikes' datatype='table' name='[__tableau_internal_object_id__].[FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B]' role='measure' type='quantitative' />
      <column-instance column='[Cost: Total $]' derivation='Avg' name='[avg:Cost: Total $:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wildlife: Species Order]' derivation='None' name='[none:Wildlife: Species Order:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
      <group caption='Effect: Impact to flight Set' name='[Effect: Impact to flight Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Effect: Impact to flight (copy)_1755559432102768640]' />
          <groupfilter function='member' level='[Effect: Impact to flight (copy)_1755559432102768640]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='When: Time of day Set' name='[When: Time of day Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[When: Time of day]' />
          <groupfilter function='member' level='[When: Time of day]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='Wildlife: Species Group Set' name='[Wildlife: Species Group Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Cost: Total $])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Wildlife: Species Group]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country'>
          <field>[Country]</field>
          <field>[Origin State]</field>
          <field>[Origin State Code]</field>
          <field>[Airport: Name]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[avg:Cost: Total $:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Order:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Wildlife: Species Order:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Felids&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Storks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alligators, Crocodiles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parrots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Caracaras, Falcons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pigeons and Doves&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulls, Terns, Sandpipers, Plovers, Skimmers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frigatebirds, Cormorants, Darters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turtles, Tortoises, Terrapins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cranes, Rails, and Coots&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pigs, Boar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nightjars, Swifts, Hummingbirds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armadillos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pelicans, Herons, Egrets, Bitterns, Ibises&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Loons&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Deer, Elk, Moose&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rabbits, Hares&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawks, Kites, Eagles, Ospreys, Vultures&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kingfishers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marsupial&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Owls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grebes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodpeckers, Sapsuckers, Flickers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ducks, Geese, Swans, Waterfowl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rodents&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bats&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Perching Birds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lizards, Snakes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grouse, Quails, Partridges, Pheasants, Turkeys&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canids&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Petrels, Shearwaters&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Wildlife: Animal Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bats&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Terrestrial Mammals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Reptiles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Birds&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Effect: Amount of damage (detailed):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Destroyed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Substantial&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Minor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FAA Wildlife Strikes' id='FAA Wildlife Strikes_B99C911E9155461AA7D78C042514167B'>
            <properties context=''>
              <relation connection='excel-direct.037cum10p2l1pl14knl1w0gf8v9m' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
                <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Airport: Code' ordinal='0' />
                  <column datatype='string' name='Airport: Name' ordinal='1' />
                  <column datatype='string' name='Origin State' ordinal='2' />
                  <column datatype='string' name='Origin State Code' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Aircraft: Type' ordinal='5' />
                  <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
                  <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
                  <column datatype='string' name='When: Time of day' ordinal='8' />
                  <column datatype='string' name='When: Phase of flight' ordinal='9' />
                  <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
                  <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
                  <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
                  <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
                  <column datatype='integer' name='Cost: Total $' ordinal='14' />
                  <column datatype='real' name='Days' ordinal='15' />
                  <column datatype='integer' name='Feet above ground' ordinal='16' />
                  <column datatype='real' name='Miles from airport' ordinal='17' />
                  <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
                  <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
                  <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
                  <column datatype='string' name='Wildlife: Species' ordinal='21' />
                  <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
                  <column datatype='integer' name='Number of Strikes' ordinal='23' />
                  <column datatype='integer' name='Record ID' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0l8kfds13a2v2218ok04311yqyur'>
      <datasources>
        <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
      </datasources>
      <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
        <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[io:When: Time of day Set:nk]' />
          <groupfilter function='member' level='[io:When: Time of day Set:nk]' member='%null%' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='&lt;[When: Time of day]&gt;' name='[Action1_CA2AD56C45AE4396937FB52817FBC556]'>
      <source datasource='federated.0l8kfds13a2v2218ok04311yqyur' type='datasource'>
        <exclude-sheet name='Descending Number of Strikes' />
        <exclude-sheet name='Descending Number of Strikes Graph' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Number of Strikes by State' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Collision cost vs fleet above ground forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Feet above ground]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' forecast-column-base='[sum:Cost: Total $:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' forecast-column-base='[sum:Number of Strikes:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Feet above ground]' derivation='None' name='[none:Feet above ground:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Month-Trunc' name='[tmn:Collision Date and Time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Feet above ground:qk]' included-values='in-range'>
            <min>0</min>
            <max>14000</max>
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]' included-values='in-range'>
            <min>#2000-01-01 00:00:00#</min>
            <max>#2015-05-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Feet above ground:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Number of Strikes:qk]' field-type='quantitative' fold='true' max='105' min='-26' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]' field-type='quantitative' max='#2016-09-26 13:11:25.585#' min='#1998-03-20 12:10:55.812#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Cost: Total $:qk]' field-type='quantitative' max='40674312' min='-9735081' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]' />
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]' />
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]' />
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Cost: Total $:qk] + [federated.0l8kfds13a2v2218ok04311yqyur].[fVal:sum:Number of Strikes:qk])</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{29AEDF9D-36A2-4515-BD04-C011BF7F8402}' />
    </worksheet>
    <worksheet name='Descending Number of Strikes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Descending Number of Strikes&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' direction='DESC' using='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk] / [federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{3194DAE6-5EFF-4970-89A1-00B5DD85F50A}' />
    </worksheet>
    <worksheet name='Descending Number of Strikes Graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Descending Number of Strikes Graph</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' field-type='quantitative' max='3275' min='-364' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</cols>
      </table>
      <simple-id uuid='{1B4BDC76-4B2E-4281-84F7-6ADF9C9C01AD}' />
    </worksheet>
    <worksheet name='Number of Strikes and Cost by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column caption='Effect: Impact to flight (copy)' datatype='string' name='[Effect: Impact to flight (copy)_1755559432102768640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Effect: Impact to flight]' />
            </column>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='string' name='[Effect: Indicated Damage]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Indicated Damage]' derivation='None' name='[none:Effect: Indicated Damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Indicated Damage:nk]'>
            <groupfilter function='member' level='[none:Effect: Indicated Damage:nk]' member='&quot;Caused damage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Indicated Damage:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk] + [federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</cols>
      </table>
      <simple-id uuid='{73179ECB-CB22-435B-A2A6-CDF7EB9450D8}' />
    </worksheet>
    <worksheet name='Number of Strikes by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Strikes by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group Set]' derivation='InOut' name='[io:Wildlife: Species Group Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State Code]' derivation='None' name='[none:Origin State Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Month-Trunc' name='[tmn:Collision Date and Time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[io:Wildlife: Species Group Set:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[io:Wildlife: Species Group Set:nk]' member='false' />
              <groupfilter function='member' level='[io:Wildlife: Species Group Set:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]'>
            <groupfilter function='level-members' level='[none:Wildlife: Species Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]' included-values='in-range'>
            <min>#2000-01-01 00:00:00#</min>
            <max>#2015-05-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[tmn:Collision Date and Time:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:Wildlife: Species Group Set:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[Longitude (generated)]' field-type='quantitative' max='-7211461.2208690979' min='-14417447.09366378' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0l8kfds13a2v2218ok04311yqyur].[Latitude (generated)]' field-type='quantitative' max='6461674.7691532876' min='2610911.5559423519' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Country:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State Code:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Country:nk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <geometry column='[federated.0l8kfds13a2v2218ok04311yqyur].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l8kfds13a2v2218ok04311yqyur].[Latitude (generated)]</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7A22FC70-186A-4897-8323-C27FD86C420F}' />
    </worksheet>
    <worksheet name='Number of Strikes vs Time of Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Collision Date and Time]' derivation='Month' name='[mn:Collision Date and Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]'>
            <groupfilter function='level-members' level='[mn:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]'>
            <groupfilter function='level-members' level='[none:When: Time of day:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <size column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{848CD7DE-DA73-463B-9743-A9FC890E38F4}' />
    </worksheet>
    <worksheet name='Overall Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Collision Date and Time]' derivation='Month' name='[mn:Collision Date and Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]'>
            <groupfilter function='level-members' level='[mn:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]'>
            <groupfilter function='level-members' level='[none:Wildlife: Species Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' z-order='1' />
            <reference-line axis-column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk] + [federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</cols>
      </table>
      <simple-id uuid='{EF5804A7-7AF6-4F71-A57D-B32A7369B652}' />
    </worksheet>
    <worksheet name='Strikes Impact on Flights'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column caption='Effect: Impact to flight (copy)' datatype='string' name='[Effect: Impact to flight (copy)_1755559432102768640]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Effect: Impact to flight]' />
            </column>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Precautionary Landing&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Aborted Take-off&quot;</bucket>
              <bucket>&quot;Engine Shut Down&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]'>
            <groupfilter function='level-members' level='[none:Wildlife: Species Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]' value='37' />
            <format attr='width' value='194' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]' value='152' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
              <text column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{0B63B1C2-1458-4ABD-9E21-1BEF111EEF71}' />
    </worksheet>
    <worksheet name='Strikes and Costs with Species'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Order]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Order]' derivation='None' name='[none:Wildlife: Species Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' included-values='in-range'>
            <min>5000000</min>
            <max>142131222</max>
          </filter>
          <filter class='quantitative' column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' included-values='in-range'>
            <min>225</min>
            <max>11697</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Order:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]' value='64' />
            <format attr='width' field='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0l8kfds13a2v2218ok04311yqyur].[sum:Cost: Total $:qk] + [federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Order:nk]</cols>
      </table>
      <simple-id uuid='{550249EA-DDFB-4EB6-9022-63C58D9FD2E4}' />
    </worksheet>
    <worksheet name='Time of Day vs Avg Cost by Strike vs animals'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
          </datasources>
          <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='real' name='[Days]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Avg' name='[avg:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[When: Time of day Set]' derivation='InOut' name='[io:When: Time of day Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Collision Date and Time]' derivation='Month' name='[mn:Collision Date and Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Days]' derivation='Sum' name='[sum:Days:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]' />
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]'>
            <groupfilter function='level-members' level='[mn:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:When: Time of day:nk]' />
              <groupfilter function='member' level='[none:When: Time of day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Day&quot;</bucket>
              <bucket>&quot;Night&quot;</bucket>
              <bucket>&quot;Dusk&quot;</bucket>
              <bucket>&quot;Dawn&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]' />
              <lod column='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Days:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l8kfds13a2v2218ok04311yqyur].[avg:Cost: Total $:qk]</rows>
        <cols>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</cols>
      </table>
      <simple-id uuid='{DB2CF76E-189F-4000-BACA-516D20B5E73C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.0l8kfds13a2v2218ok04311yqyur' />
      </datasources>
      <datasource-dependencies datasource='federated.0l8kfds13a2v2218ok04311yqyur'>
        <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
        <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98426' id='11' param='horz' type-v2='layout-flow' w='98994' x='503' y='787'>
            <zone h='98426' id='7' param='horz' type-v2='layout-flow' w='88931' x='503' y='787'>
              <zone h='98426' id='5' type-v2='layout-basic' w='88931' x='503' y='787'>
                <zone h='41832' id='3' name='Number of Strikes by State' w='44465' x='503' y='8168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7381' id='8' name='Number of Strikes by State' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type-v2='color' w='88931' x='503' y='787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='25000' id='9' name='Descending Number of Strikes Graph' w='47610' x='503' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24213' id='14' name='Strikes and Costs with Species' w='28113' x='503' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24606' id='15' name='Number of Strikes and Cost by State' w='41321' x='48113' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='41832' id='17' name='Collision cost vs fleet above ground forecast' w='44466' x='44968' y='8168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24213' id='19' name='Number of Strikes vs Time of Day' w='19497' x='28616' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24607' id='20' name='Time of Day vs Avg Cost by Strike vs animals' w='41321' x='48113' y='74606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98426' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='10063' x='89434' y='787'>
              <zone h='6791' id='12' name='Descending Number of Strikes Graph' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='10063' x='89434' y='787'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='64273' id='13' name='Descending Number of Strikes Graph' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' type-v2='color' w='10063' x='89434' y='7578'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10433' id='16' name='Number of Strikes and Cost by State' pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' type-v2='color' w='10063' x='89434' y='71851'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10433' id='18' name='Collision cost vs fleet above ground forecast' pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]&#10;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' type-v2='color' w='10063' x='89434' y='82284'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6496' id='21' name='Time of Day vs Avg Cost by Strike vs animals' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' type-v2='color' w='10063' x='89434' y='92717'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98426' id='26' param='vert' type-v2='layout-flow' w='98994' x='503' y='787'>
                <zone fixed-size='280' h='41832' id='3' is-fixed='true' name='Number of Strikes by State' w='44465' x='503' y='8168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7381' id='8' name='Number of Strikes by State' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type-v2='color' w='88931' x='503' y='787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41832' id='17' is-fixed='true' name='Collision cost vs fleet above ground forecast' w='44466' x='44968' y='8168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10433' id='18' name='Collision cost vs fleet above ground forecast' pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]&#10;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' type-v2='color' w='10063' x='89434' y='82284'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6791' id='12' name='Descending Number of Strikes Graph' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='10063' x='89434' y='787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='25000' id='9' is-fixed='true' name='Descending Number of Strikes Graph' w='47610' x='503' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='64273' id='13' name='Descending Number of Strikes Graph' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' type-v2='color' w='10063' x='89434' y='7578'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='24606' id='15' is-fixed='true' name='Number of Strikes and Cost by State' w='41321' x='48113' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10433' id='16' name='Number of Strikes and Cost by State' pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' type-v2='color' w='10063' x='89434' y='71851'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='24607' id='20' is-fixed='true' name='Time of Day vs Avg Cost by Strike vs animals' w='41321' x='48113' y='74606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6496' id='21' name='Time of Day vs Avg Cost by Strike vs animals' pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' type-v2='color' w='10063' x='89434' y='92717'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='24213' id='14' is-fixed='true' name='Strikes and Costs with Species' w='28113' x='503' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='24213' id='19' is-fixed='true' name='Number of Strikes vs Time of Day' w='19497' x='28616' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BB134C23-2A52-48E4-8988-DACD64CABA78}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Descending Number of Strikes'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C68E8597-5B2F-4269-A8C4-1FEB891722A3}' />
    </window>
    <window class='worksheet' name='Descending Number of Strikes Graph'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Action (Airport: Name Set, Origin State)]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BBCE7B0-394E-4D41-870C-E77BC0689126}' />
    </window>
    <window class='worksheet' name='Number of Strikes by State'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card size='31' type='pages' />
            <card size='162' type='filters' />
            <card size='302' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[io:Action (Airport: Name Set, Origin State):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Collision Date and Time:qk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Country:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8C183CE-41A5-4F05-BB68-87D0D7114243}' />
    </window>
    <window class='worksheet' name='Strikes and Costs with Species'>
      <cards>
        <edge name='left'>
          <strip size='290'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Order:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{11B371BA-8F4D-4533-A91D-F3EA7CFAF9E8}' />
    </window>
    <window class='worksheet' name='Number of Strikes and Cost by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28563BB7-865D-4241-94B4-08545E0F8836}' />
    </window>
    <window class='worksheet' name='Collision cost vs fleet above ground forecast'>
      <cards>
        <edge name='left'>
          <strip size='277'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]&#10;[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[When: Time of day Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Calculation_1755559432703430662:qk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Feet above ground:qk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40F73FB3-BF8B-4976-947D-1834DB577308}' />
    </window>
    <window class='worksheet' name='Number of Strikes vs Time of Day'>
      <cards>
        <edge name='left'>
          <strip size='284'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DA978AA-C0E4-44CD-8844-64B8853CE658}' />
    </window>
    <window class='worksheet' name='Time of Day vs Avg Cost by Strike vs animals'>
      <cards>
        <edge name='left'>
          <strip size='262'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Wildlife: Species Group Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[io:When: Time of day Set:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:When: Time of day:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A94A38B2-2A29-457B-8F35-AB4696F1220D}' />
    </window>
    <window class='worksheet' name='Strikes Impact on Flights'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[Effect: Impact to flight Set]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[sum:Number of Strikes:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D25EA48C-97F8-438C-8DFF-C29C0827CA40}' />
    </window>
    <window class='worksheet' name='Overall Analysis'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[mn:Collision Date and Time:ok]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Origin State:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Species Group:nk]</field>
            <field>[federated.0l8kfds13a2v2218ok04311yqyur].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF303C6B-3C4F-49B5-9801-5CA577FBEB0F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Collision cost vs fleet above ground forecast'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[:Measure Names]</field>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Forecast Indicator:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Descending Number of Strikes Graph'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Airport: Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Number of Strikes and Cost by State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Effect: Amount of damage (detailed):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Number of Strikes by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Strikes vs Time of Day' />
        <viewpoint name='Strikes and Costs with Species'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Time of Day vs Avg Cost by Strike vs animals'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0l8kfds13a2v2218ok04311yqyur].[none:Wildlife: Animal Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{2DF62E37-6286-4D0A-925B-8188A1FFFE42}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Collision cost vs fleet above ground forecast' width='192'>
      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
      oIoCITbvxwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      5UC1Kf/0xD1ExYHbF7AJ0aPy6munEBW7tmTyaeepHvs9wcmpaTLlSsvnglHj9NkLVLS6TSqT
      9/7+bc7eGGuRqA4HAb8f1TaOkMmN6zeYmJiykVmUKxrpVLJFUq/kefvv3ubedOtRNa1a4tqV
      axSrreWUFQeGriMrrRN/rZRhbOwOswtpG1mWs2fPk0rnN0gMMtkyPbEgqVRufektC28gRCjg
      s3VPuX3tEjdujdsq3Pi9e4htbHFdN6hVyrbp5menKVbsNwKn7o2juDY2/k/yNCycqs1iyCem
      qGX7NIPl5RwuV2tDjsfjFHIZSpXWWLW5zCJ37swwPT1rk6fFzSsXWGx5z/d57Aqw5+hRhuJd
      LZ/X6iYnXzhOJBSwSSUwcnA/+4btLtmwqFRrVKutSgUCQZ8TxWk3OghINKjVdXRzfQVIipO9
      e0YIhTc6TVtkkvM0UHA5W0cx09SpaxqG0VqhssONy+kgHG69ZER1+zlw8AC9Pa3vJRjwo+kW
      Pvf6+xVMw8C0QDfsD6mO7DvAvr0jthUqCRZ3J6Ztm53P78eyGd0qxTxLqTR6o7UL1Rt1PH4/
      WtUueLJJsVhEdbQ25EgsSsAfRrHRmkwqTXp5kYnp+RbZ7PQkguIm4G2t12A4jqFlkVR7a0IQ
      xU392R67AmTTGWqN1t4zEAqRSS2STGVs0+m6jq7b3zppGibhcNhGYpFezqweytkoMwUHVjXN
      Qqq4Ib86+bKGqW2sUIGewV2M9MdtVzMs0yTa3UvEppGbeoNGQ6dW01pkWinLcrZsc6umRN/g
      AN3dCaKR9R2DJMuUCzlME9uGPDMza9uQAVxuH+GAvYtCPl9YN6FeTeP10xXtwtLrLc9zeXwE
      Ax68PrvRSKSQTjI+PdciqRRzTExMUdNblTjcFSEU6sLrau1odu07QMjvxeux69h0ZNWPU7Fv
      yoIoI9k4QN4v7WNm/t4EyWzOVpbPZsgXijaS9uYKCDicKrrNSwRwqjLlSmujA6gXy4QHdtMf
      X99gLctCwES3aVl6vcr49Cz5bOswKikqkmDZXg9rGAalShm90VpO2eEhFPDaNrx2GHqDUKyH
      WCxsW2mRaBSlTXhJra4hGBu9kJq43W6cNqaMqTeYn5/H7Q/YPq+QzzM1OWWTp4kvEG0ZwQDc
      Pj9GvULuk5CYa8lncwQjEVsTCCyyy0vMzNu1B4m+/p42HaJBuaxRb+nY7vNYFWBhfpEv/NKb
      vHjwgP0XLAFZba20Yi4HGCjOVg82rVJFUVXbSWldq2PKDsIBexPIH/Ii2hzwVFQ3DllEVVt7
      H8s0WZqfo1BufYm6VqVca7SsygCYFiiihNOmIVhmg0q1irGNe5UlWUGwDJKLSduGXK1UaNjM
      +CzLoru3n1CktSFXy0V0S8DpbC2jpKgkuiMUivbzA5/f31xqbJGIxLq78Pns7peT0U0Dl7O1
      zgOhEJg6mu2cUMDn82KZ9osbYCGKrfWaSWVJ9PcQDrc/ufhYFSCXTjE5Nc1iMmUrn7s3QSrX
      Ojr4giHCoTBem8aj1WuYloBk84OXl5J4/SE8tkOlRb5UwWNT2fVakcVUllKp3JImly/zwosv
      MtDXGghVcXoQ9Crl6sYRx6JYrBDu6iIc9LWkMyyJoM9jb6lthmXidLltbVpZlinmCy2N1TR0
      UslFEOWWdC6Pj0QiQXcsaptnoVQln1m2VYCl2TlEVW2RZZaXyGQLbYIdmxhaA63eqsLZdBa3
      z0soFLJNt7CYRZHsVF/nyuUxFhdaTa5wV4hrl2+RStrE4fmEx7oMuv/wkbayYj7LyJGD1HT7
      VlCt1jDE1h+sN+pUq1UssdWXPRaPMzkxTqVhEYusf5GpxUVC0ahND2Myt7DMvn178QdbewpB
      gLm5GXqHXPg86xfhGlqF+YUkTl8X8XU2u0Umk8EbCFAuV1HX2d8Gd27domLAaMBu2G5PajlL
      Q29dQzEMHafTRQO9pSFLsoLbqVLTmrb8VnWuVikhyxKmrNqm8fn9FKzW/MLRGHOzSds06VSa
      /l1DtosUoUgXdk2/iYjHoyDYLKdnUlmiUTd1s7VDLOXLxOJevGGbKM6rOT8hTMNENyzi8dbC
      TU5MsmvvKKrN5MXjC9Dd3U3YZvUoOT9LVReJhlqH31KxiCRLFIulDRKReLyLXCZNrd56r5kg
      isiShNky/Opk8jpf+cWvsHdX/8ZUhEN+Fhfm0VrmAAJd3d0k4jGsbZhAAH19vbg9rZPZ+clx
      PNFuzHq1xTxKL85RatRZWsxs63SfoqrIsoLbZq+mUsqTK5co5kstyphNZ3DIEhWb1aNcZpnk
      UqqNedSezHKKSqVMpdZqHhmGQSTWw55drSuGcwtLHD/5MqX0Ytu8n1hUWllRcLlcNOoaeNa/
      5Gg4wOTkJC6bF+VwurBZYQOgd2g3vW2eN7xntGVLv4nJ9MQETm8Ij6vVPDJNiz37D+NqiTlk
      MT8zSbVWJBSNE/Kvn69Eu/uI9w7YlERAVR0IkolD2fqJrFqlTKmqYdpsrvUN72J+bo6uRF/L
      DCccT2Ak58DaXoy/fCaN4vLgUFvfSbVUAMXDcE+kRaksy7KdnwEEQxFUt0Ymk8WT2Pr57kxq
      iUhPP+FQa2wPRVVxIaLVajiV9XUQj0VILiaJJ9q1ikfsDdqhw07jiZlAHTo8DXQUoMNzzf8H
      tJd/oXSqX/kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Descending Number of Strikes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Descending Number of Strikes Graph' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deZBcx33fP6/fNffM3geAxUGABAmQEAkSpERSB6lbEWMpKVpnJEWSq/yH
      nMOp/JNKxZX4DztJlWOX48T5IxUrlpLYOizJqpJlmTpIkVREUaEkUhRx7gKLvXdnd+55V/7o
      h1nszgw4g53Z2cX2p4q1O81+3T2L932vj2//WguCIECh2KOIXjdAoeglSgCKPY0SgGIDy7OX
      eebZ/0vVCwgCj2x2FYDcygpumMd3S7zw/Assra7Wrlu97vfdhNHrBih2Fi//6hIP3jnMl7/y
      t5w4fZjq1cusFCs4xgBDqYBc3uUtD97FSq7I5e98i3vuvptv/+BFxgctDu2f4Icv/JJPffZT
      RPVef5PWUG8AxQb2j2R47uVpjh8a48ihAwSeSzm/StEFK5JgdDBDgI5Olf2HjrK0uMK+fWMc
      OXoUNJ1T970BXev1t2gdrVOzQEEQoGm76JsrWsJ3Srz82iQn7jqOuAX/eTsmAM/z0PVd8t5T
      KEJUF0ixp1ECUOxplAAUexolAMWeRglAsadRAlDsaZQAFHsaJQDFnqYlL5DnlLl0ZY6J8SEW
      skUyMZ2iayDcAlain0TUAuDvfvI0y7kVAHTd4IOPvrd7LVcoOkBLAgjQcNYWedUJSJowV9bQ
      PBcMEwpXiU1M4Ps+lz3BjGcCYAY6ruu+TskKRW9pSQBOpUzV89C8Kstlh76oTsETaMU8keQA
      QgiCIIBNXiDDUGZTxc6mpTs0mkhzz31nut0WhWLbUYNgxZ6mo30Uc3UZa2lB/q66P4pdQEfv
      Un/yBbzpCwAIywY+3sniFYqO01EBlNJHyFeiAFiG2cmiFYqu0FEBxE+VSJcKAJhCCUCx8+ns
      GGCmgLUiowOYug0nO1m6QtF5OiqAM9nDlBbiAAhTvQEUO5+OCuAQGohwZlVtkFfsAloSgO85
      TE5dZXSkn8Vskf6ERcnT0ZwCdnKg5gXKV3y8oicvMgXprjVboegMrZnhXI+Y6XF+apZyuYzv
      pAg8F80wyRVniE0cwPd9LmnnKehTAAhhca/yAil2OC0JoJJb5uJcjr64TdFxcZ0yFVegFVew
      k4M1L1BRPMqaJgfBuqYrL5Bix9PSHZoYHOehwfHXzffC5A+5MiXfAKZl8Rhv31rrFIouo7xA
      ij2NEoBiT6MEoNjTdHSUGhkaI+bK+X9TLYQpdgEdFYD9YI5oKQsoL5Bid6C6QIo9jRKAYk+j
      BKDY07ThBZpm375RZuaWGUxFKHo6wi1iJfpJxuxut1Oh6ApteIF8fvHKa6Qy/SxmcwS+i6ab
      BMVZ4qEX6PqjZoIAFRdIseNp2Qt0aT7HSF+KpcVFUpkojifQ3Cz2dXGBrjdAa5qKC6TY+bTs
      BXow9AIdOtw838mgwEE/NMOhukWKnU9HH9G3BSX8QO4JJnA6WbRC0RXULJBiT6MEoNjTKAEo
      9jRKAIo9jRKAYk+jBKDY0ygBKPY0rXmBXIfJqStMHDrEyvIyEVPbEBdIeYEUu5XWBOD7xKyA
      mbl55ueXGcjECHwPTTfJl2eJH5BeIILr3EDKC6TYBbQkgPLaEpfm8wxlAkq5LE5MUPV1NHel
      +Rlhyguk2AW07QU6cuS2rjZIodhO1CBYsadRAlDsaZQAFHuaro9SX54tUKjKkOm60Di9P9nt
      KhWKlum6AF5ZfZ754goAljA4vf/Xul2lQtEyXRdARZylrF8FwBcWoASg2DmoMYBiT9P1N8Bd
      hRgH8rLfb+jyKKVXX/wbSgUZQlHXTe550we73QyFoiEteoGqXJqaZnRkkPnlHINJW8YFcopY
      yX5S8UjTa/sLI8TWZJxQocvqDp77Kv7iWZnBSoASgKJHtOgFCohbkHcEnlNhec0h8DzQTQqL
      cySizb1AwXVpATLtK8sPsjB/CAA7YvNZ5RlS9IiWvUCTCzky+RKVwCIROJRdgeZuPCOskRdI
      uy5NQ6a94I5zoRoFIC5MflN5hhQ9omUv0JkWzgh76fwpsov7ANANg3ef2lrjFIpu09FH76Jb
      YN5dA8Ds/vhaodgyHb1Lv+sKXnN0AOxA55NtXPu9n36LtXBmyDQs3vOQGhgrus+OeUz/5fks
      F5eWAEjaNu95qMcNUuwJeiKAQXOOojUHQMxqPoWqUHSbngjgZPk8YyV5oLYVRHvRBIUC6JEA
      9k0cJhWLyQaoN4Cih/REAANDoyRsGUlCGOo0SUXv6LoAflJeY6G4DMjZndu7XaFC0QYtCSAI
      fIrFEtGITcXxMHUNL9DQAg9hWBh6c1Ppi+XnuVg8D0DEiPJpPtuZlisUHaAlATjlElcnz1EW
      CfAd4rZO1QUtcDAjCQ4fPLDB83MN6Q9qkNYgX9xxSVarACSEaJhPoeg0rZnhnAp+JENS86k4
      BprQMPQAMNEIGt78AEEQcKYa40g5AYBpRmXeTfmDIOCf/fQXOFNyZkjE4wT/uHGZCkUnaUkA
      uh0lFa3Q19dHueoSswRVX6B5FYxIYt0Mt/k6XefKpTTTlwcAsG0bXdc3mubCfBtP2AvTFIou
      05IATDvK2Jicr4+Es5Zya8vGKcwPxK6wEp+UBRtWp9qoUHSNjs4C2X6UiC+7O7qvBKDY+XRU
      APMX5lm8PC0LNpUAFDufjgrgnv79lKuyM6+ZaoFLsfPpqAAOJfoh44Ulh/t/Jw4Qj8pVX1O9
      FRQ7jDoBnDt3jqNHj3asgqGhQWxTVqOrrY+KHUbdEu5TTz3FuXPnetEWhWLbaehheOqpp3j6
      6ae3uy0KxbZT1yd58skn6zIFQUC16mDqGqWqi20KXF+g+Q7CimDewAukUOxk6gSQyWRYWlxk
      anKKe07fhw541TKTV+aICIe5bInBVJSqB1rgYtjxmhcoYH1BNwAC39/sesD3ffzCCF4uLhNM
      o2XPkELRaRqOSpfnrjA/v4IL6ICmG+BVcQMIPJ9AEwgtQBPy8mZeoGZ8dy7P7JyMHhGJGPzz
      zRmUDUixTTQUgOvmKeeD2n0Y+D7pdJpkMknfkEvcNnECAV4F047XvECb7DxoQmy2/SCE4OW1
      IhdWcgDEIyZCCEp3nKKSCWMKRSMIobpViu7TUABWJEXZXayNkA3LZmRkBIDYtTwAdO58YMNb
      wfcWABCe2ies2B7qBFBcXeL8+XMsrlXQGl3RJaq5AcoyLBB6VR28rdge6gQQTSUYHz1CNFne
      1oasjc5QCA/SMCKx18mtUHSGOgFomo1h+Ow/eJDtdOQX7WfIx14DwLTTwO9sY+2KvUrdSDMI
      fKqOz9Xz56lsY0OKRMkHcfJBnALqDaDYHhoMgj1WVlZJDo12cIi7kf3pMlqlCEDUlsPpr/E+
      LhKGRgxs/n6X6lYorqdOAIvnz5IeHuS1c5c5cepEV0Sw1Pd9ZoMLAMTMOPCxLtSiULw+9SvB
      4+Oce3mSRx+6h3Yd/VP2Qcp2PwDC0Omcp1Sh6A51AsgtLjM3P0MiYjE0Po5ArvRWKlVsyyBX
      KBG1TdxAQ/McdCuCacjhsouJI+Q7Q9OaL2Qdn9fpmwvDqNvy53gxwM9J+0PcVUvBiu2hTgB9
      Bw5z+/Iik7Pz3HX3nYD0Al2+OodNFUePIbwyVTdAw8OwYhu8QNfjN/ECvftyBGdKeoFELCbz
      FZYIcjJidODGlBdIsS00mAbVcFwfrVq9zguk41UrOCJgaWGOvqE0mgZaOInUrhdo8L0nID8c
      tkAOgmcGB5kScuktaauFMMX20NAKMTg8xtET91LbwBgEDAz0k0qnGRytELON0AtUxbBjDb1A
      IH0/jbxATwdx1nw5yWr6Fu8Ugs0XKy+QYjtoKACvvMoPn5vmscfehAHops3Q0BAAtiVlIQfI
      N/ekPks/c2HVNgbvvKlSFIqt0/Axu7g8y+Qrkzjb3RqFYptp+AYY6B8hNlLt2kKYQrFTaOgG
      /fFLr5EQESpAO8ZkYZTQjVz4u4rtqdj51Akglh7g9D13cWU+13bQoPTY94mnLgGgCRt429Zb
      qFB0kcZbIldWiCfSbe8HmPrVCXLzowAI02Dw9Fabp1B0l4YCSCYSLOerbW/NvWPkIL49KD+o
      SBGKXUBDAWT6+jl7/hd40JYf6KmlyywuSkenaRh8GPUKUOxs6gTgVsvMz8/hG1ZtQ4zvVllY
      WWN4cIC5uTlilk7R09GcAnZygExS+vfz0QrZeAkAU53+qNgF1AnAcyrMzM6Sy/nXdYEE1WqV
      teV5ZhdX6U9FCXwPTTcpryySiu/H933uf/7nlC9dklfYNu4TH6nzArmuu9E6Ecg0NibJNIWi
      yzScBl2rwIF9I7VBsOuUmZmexhkcoJTL4kQFjq+jlbLYyYGaFSJWKmPkCwBojothGHVWCJl2
      XaIm09iYJNMUii5T7wYdP8I/+LUjG9KsaIIzZx4A4MiRI5svUSh2LT15zL7RyVOqrALqKCVF
      b+mJAPYZCVxL+v01NVhW9JCeCOCvpqaYX5RR4GzL4nNvfXsvmqFQ9EYAP53r58JVOeqNR0w+
      14tGKBT0SACtcvaVX1ApyXUF3TC489S9PW6R4lZjRwtg4ZfPk1uWXSUrElMCUHScHS2AeDaJ
      tiS35RixyOvkVijaZ2cLYPAouiEjyBm2mi1SdJ6WBOA50guUihrMLOUYTEUougLhFrESA/Sl
      uhPL88fHXmSpJLtAUSPGcR7qSj2KvUtLAtCEwHWqmJkEWrDKaqEEngeGSSW7SDohvUCbIwNJ
      3w8N0tYTa76fBl6gil6hYsow7UIXyh+k6DgtCcCtlrl6dZrCWhZP2MTxKbk6YpMXSNu0haYV
      L1DN99PAC9ToWoWik7R0R1nRBGceeKDbbVEotp1d90hdLZXwAmmjEJpGJqrOElDcPLtOAH/x
      0gssFvIAxC2L33r08R63SLGbURt3FXuaXfcGmFl9npk1GUU6FUkCj1Oe/gt8Rx4xqelxogc+
      2sMWKnYTu04AufIUq6XL8kOQAUB/JYuel5vxiVTgAJS//+8JCosAaJE0kcf+VS+aq9jh7DoB
      vPdVk9xseEx30oQnwVzLwGo4ZxoOit0L3yfITgKgJUZACUDRgF0ngDvmddwZ2WxRbN78spfG
      dfsA0L0MiW1pnWK3sWMEkHQFaUc+xRMdCKr1nSNvY7WwAkA8mlTH8Cka0qIXqML8yhqZmMXc
      SpFMTKd0XVygvlS86bVuuYRTktOWwQ22P75rIcrarHxOm9Gt7xMujBfJV2W9mGqyS9GYFr1A
      Op7rsLhcRgQBq0UHzfPAsKhml0gnok29QGLhBYz5SwDoVgTXfbKhF2jzMUvNfEQbTEMEuK6L
      Hqw7KQICPNfl/E9HmF+VFuq+eBz3mPIRKepp2Qs0Mz3N4OAAuaITvgEEWmkFOzl4Qy9QOT1H
      wZGzNoYZa+oF0rTWfEQbz1LSGviIZFpldYjSshwQR92I8hEpGtKyF+iBm/QCXRr5GLOxNVmO
      vn1nBjz88ClyFQ+AmOoCKZrQ9cdin+vhOXJXl9nmyafpioFfkk2MmPLn2sgq5WAZACPpsx+Y
      CQLcsL+kEzDemaYr9gBdF8CY4xCvSAHoRnsB1+9cilHKJQEwLHlWzcKhefKZqwBY0QongX/j
      uVxxZR39rsOfd6jtilufHd0xvvxqktV5OXi14xFOvqtxvmOTl0nPzwOQSqWalvff//oLZHMy
      Il0qnuQzT3y8sw1W7Dq6LoCIVsUTcleXLuQ06COPnOJ4Xj6xbaN5/1xUdYyKbKJ+g/GD7nmY
      nuzvG+HPRvys+jTzziwAA84QoASw1+m6AMr8jAJTYWU28CSWZRKJyKkbU2/3IKbOkv/mt/EL
      cuO9iMdIvE+dWryX6LoAvp6b5+LKNAARI7rjjs1b/dY38Rbkxnt9aEgK4NlnoCzfWsRi8NCb
      ethCRTfpugBO5WA8Kwe/ptXeINiKaIRjX6zo1t8UZy4kWVuWkeYSGTm49o7sx+kPd5Vl+uXP
      y1NQkOcckEyhglHcunRdAPusaZKRiwDoZnPLRCMmblujOiR9/rrdzonFMDH/d5QKcsBrRePA
      RzE9DcuTYw4z/Dl/ch/lohw4R2IpJtqqRbHbaUsA+dVl5rJFBhKWjAvkFLCSg/Sn27uxW2Vg
      +kv4S2cB0KJ9wGdbvvb41Oc32qFpvEkmNbuPyJp8K1ip9kSm2P20JYBsNks2W8QSKYJrXqDV
      JTLJ5l6gjQQ38P00SLuuvCC4llZf3ubzXOs9QzLt4P5HKKekQc5OxGS+VArNCMMuxi3pLaLe
      W6S4NWlLAEJoCOSpkWVPRyu/flygjWg38P00SEOr3caadi2tvrzNJ3rXe4ZkWiY1gSMqAJgx
      K7y2gbdoQ0p9muLWoa1/2fEDhxk/0K2mdJ/nVv4bq6tyHSCZHOJ2/rTHLVL0mp482vKVPKsl
      +SS2DAEMb0u97/iJhTsnuzv6oAWfbNI+R8OvyDeDiGhqN9ktTE8EcOn5v+byjPTzRCMReOO/
      7kUzmnJ1OEY1KTtfVjzK7T1uj6J79EQABys2sZKccbGDnRf3f9rqp+TLtYGYFVMCuIXpiQDG
      jVHiltz2aFg7L+6/Uc1hVuTUqKE39xYpdj89EcAaGsuB7GNbm6dwFIptpKMCGD59iuDAmPxg
      Ni/6uxhcQD7544HZZIlqZ7HyZ/8bPy/tEXomTeaj/xBv6QL4co1AMyxE36EetlBxM3RUAGXb
      xovKPr1mGLfU7Emf7YEXbmmzZbfI+9UPCCrSSarFM1hnDvWodYqbpaMC+LZrs1CVg1sjMPhU
      JwvfRp4t/YhsQW677BdDPMK7WTH68XX53XQ9QQbQeBBNu7ZKbPemsYot0ZYAAs9lYXmVdMKm
      4uloXhkzmiRiyWKemYazV2Sf3jbZNgH0j49CGEsoHt+6L+mKO82SK+OKlsOtlvPGCK4lf7fM
      CJkt16LYCbQlgMkLZ/GsFMX8Kq7no2kaQl/j4MQBfL9+x7vXYHeW53m8Z8An68v/Z9l6mC+o
      y7fBC1RLu54Az/N4JP4Lqq5cVzCimeblbQwp1CCfLG/DeWVBg+8RBK2lKXY8bQnAMC3m52bp
      60/ieRr4FaxoCk3T6rw8AEIIppMjLDgyLIppxhBCcOVIirlw8dc2DIQQbPbuCCE2eIGupW1E
      QwjBaP4swdolmeINNcjX4FqtUXlhmlaf9odnp1kOXaOjAwn+QJxis+QblafY2bQlgH0Thxkc
      czB1gY8GvocwzJoAHnnkDdyRr8qCdZk2MDOImJMOTMOKSKFsusEaiWdzmhambc4p0zYKRV6r
      1edrWO9GM1xdvZrMd+d+m1xB1tKftuvb3OQhoNjZtCUATQgithzs6Q0uN00dK1zYMoS8GQ4u
      HWdkdgAAsYsPux69615Sjnzmp+wbBPh6/g/BCXeTxQbh9G/wjZd/RtWTg+VUJMI7br+L8swS
      gS8FJUwDe1iNKnqB8vl2mP86f5ZiRXb5BlL7+ATwteeeY60ku08TAwO84/a7uPif/wovNARG
      xgc4+tu/3qsm72m6LoCZ+DKrSXmkkWHb3NXtCnuMzjB6IH1EgkEADl2apBjuMR4pyc32Z8lS
      DaQoMoHJ0R60VbENArDuOIo9Im8EPdxY8mipSqkgn356u/ESGzCjm1T10FukWz01rz2xMohf
      kgIwgv6m+V4KFikFchFtNLB4O/DK5N/i+XKqNWqlOLrvEcjPUpu+0k3ZrVJ0jK4LoFgskcuF
      g2AzHB/oFSxDPv2EvvXthv8lOcZMeHZwJtrHn2y5xJtn5LbcdWOA9hbH9me/Dn74d4lOAI/w
      e7/3B1Qr8q0xfmCCz/zWbzP1+b8hcOWUqz2UYfT9KmzLzdJ1Abzyy1eZvizDo9u2zRO//pGO
      17FvOo21KJ+myeTuGEyePvEATlXOmKX6mre57AZUw2dExZVvgtwrkwSOTHQn5HzyF//dP8EL
      F+2GDhzh3Z/5F91q+i3FLTEIHmQYPZyCjNM8NuhO4q37XiNwwqd9cnTL5TnlUk0AbvjGULw+
      XRfAnUJnVMhpQ1N053yAeGkOtyD3+kZFsSt1dJqV5UH8argt1OunWUCWjKhSCTfyJ4XTVh0v
      f+0/EIQr7rGB/Rx588eoXrzEtaVuLRLBHBu7mebfMrQpgIB8roCpQ9kXaG4ZM5YiajUv5sTS
      CtVZGXpQRJvH3dH7n8LwLslGRZLAh9pr2i7jq0PDlB3ZBRpOZPhHwOL0YXxX3ux2eoTEcRgw
      KjieTMvo1ablpTMQ3uskUvJt+Oz5HH5ozxgtFzkCfOl7L9fWH4ZHB3jH+5QAWqa4tsIvz00z
      1BfH83w0IdCyuZoXaGNoH+mNKYoIFV0a1IQeCb029T4dYV9GxM7LfHaqLS9Qo7RGXqBztx+l
      NCQX5SLpNKM36QW61paNifLa600dAdRuwOsv9jyPQ8/kcUrhGGDUxLvP41njPqrIvv2AnmR8
      k3/pWlsKx1fxw+5OMBTF8zzeduzDBKFdW++Xf7+RldsJQo9WX2oIz/NInF+uxWCKeAae5/H/
      vvwfa3+HxNAERx99kuKfPlyrV993P/b7/4hbkbYEsLS8Qjm/hpO0cH0NrVrGiqWlKU6IOpuC
      EILJ4VOsuvtlZbbBMSHY7Elo5vHZEBfohvnq623kLXr53pNkwwWplB3hzU3Ka+QF2owQoiUv
      UDMPknDlf4D8XQjmbYfKtVkx00UIgX3mACJ8K1iZUYQQ/PGVA1TCkfFRf4DfFYJY/xCET3ZS
      0brvce3vdzYyjx/m229ZCCG4ffp/1vLp2gMI8SGoFtYvdsu3rM+pLQEcOHQb+yYOQ+DjBxoE
      Ppp+XVCrDTeO9MbsP3KAgbQ8sFqYelPfz4p5ghVTDmBtM940XyMv0KaUG3iLNt4RzTxDGz83
      9yVtztgoX50BqWGbG5Un0+YO+zjXbuxogKZpvNl4ETcIu0/GQTTtPZsubfA3CMs7Vh6uvQEG
      nExj/1ITS9OL332m9vu+I4fIDCRYuvTzWlpq9DDJod0VOKrtQbB8Egjk8+D1B7WaEIjwcIsb
      PUW+5dzJxaqc0ktqNls1Bpj9BwnCdQftFls8+sghi7CnhBjcJn9VEHDblZXax8jQCNO2zhd/
      frGW9pjo4+FbXQDbyZ/N3c/8jDzyLpZI8C/buNYeuQNS4Y1v746p0VZZ/s48QUW+AazbEkTe
      3f06A+CPltYfYI8VBeOWiTGyHtRMxGOUlgvM//xKLa3vyBCpA81XxHvNjhaAE+hUA9lEw+/O
      FOpsuUq5KPvYUV3bFTGAAqdKEM4gBW57U6NboXz8ldrv7uAAkK7L45Yd8leztc/x4SQvvjbD
      73/xh7W0j7/zHv7em3bGX3pHC2Ar/Cz/OOXQb2RFTd7QJN+XxP9gQZcH7A2LYR7lzDa1sLP8
      eeEF3HAedMQa5glu62wFGgzsy9c+RhJV+qprPDz/o1ravrEk1aTO3NhztbREXMcvjlOurlte
      XM/ntctL/J+nXq6lvfOBI7zhcB+5pflaWjwzQDTR3bf3jhHABBpGOCCLdWBjSSo3SfSaB8mJ
      Avc0zKcJF01c61Dv3jDo31v+Jo4n3wbHxB08wftbvvZH5X9a+72vOsZ9LV5XyhW59NKF9WvH
      svQNHGc4u+75jVcGWGhwbTZf5oVfXa19PnV0hBlzkW9/Zd3J9abHP8TJ+x9r+XvcDDtGAG/W
      vkoOeRiGSQr49JbKG8z+yfoBGZUR4IkttvDWZeF0gtrqcH/zxUpn9Xjtdz8ziC80KsZ6fk8Y
      nK0U+bdz52tpnzg0xIHISEvtGLYTvGt0vY6+eB/lpUtkX32qlpY68kZiY3e2VF4rdFQAd5//
      HcoLrwLIQyfu+wbTpdfIFuQzwDBN7uSBhtf6kRP4Mdmn9O3unDijaMwlfb0v72txQOOliWO1
      tMzwfu4KIKj2rV/kRRg1Z/nQwHrf3oo+wKv6PcRj6+WZZuuO2KtWkW/0r88qvTVyH/f6NqPV
      S9fVe6Ll8lqhowJ4+o6TzE7IP5IpTI4BYjaLPr0EgG5bTa8VsTeiu/JML2H2duvkWwpHKeTk
      DFJSDPS0Lb3iR8furv0+kTjccCPTlcQx/vLE79Y+v3nwLvYVlnn8l9+rpR08OEClxe2eJc1j
      KrTJA+S07kfZaEsAbrXEYrZIJm7VvEBWLE3Ubl6MPvxtDE0OdgwzATS26Y6by1SsUChmbyNG
      e9MLeFkZGMsbaO9ky72Ej4arrz/hfU2HwAdvfWYqCFq/iYdKWd4+/ZPa5wMTj0O83qtUKM+z
      sLY+gO5P3k4quq/d5gNtCqDquKxmlykXDelxETraan7dC3Rd3mu+FR/ww0Gtp8m0FxemWFqW
      2yQty+Y2z2PCWkCLyLTAiDb1DDX0AjXwIFX778A35atYRPvxPI+hq9NEcnK/bjyeaB4raNMX
      2aoX6LMnThCEFmU909c0XtLr1duofUHDtBY9TQ19TgGevzlfgLcp7pMf+DVLxXpaUBcfKvDr
      0+S1m9J8n8D3ENfX7Xn4vo/YdK1RuET/9Bdqada+j7A6W2T22e/W0oYeeJj0bcd5PdoSwMrC
      LG5gYLhVqq4GfgkrlrmhF+ic/wlmXfk0tYTJO4TAmZyjMi1PjycSvYGHplGsoOuR9d6RGaF8
      7fjTRBIhBJ9/ZYglGdyNdDrDb39Q0DcVw1qWf+BoJlZf3rVYQVp9HZuy1XuBtPp819p8NZ7F
      NeWrPRrXGWwlHlFY3hvKx/DCiBJJ0V/v8WnQZq2Bp6mRl6p2LQ2ubfB9N16rIUSj0DP1+bRN
      +YQmGpbX8No6a0rjeoMsOC+uz+IFh2F6fIofz6/bN+4bfIixIEV+5tVaWlsCGD1wmCHPxzB0
      gmteINHM3yMbdlj7An1CLqAYIo6mPcmP9dNcNI4AEDdNfkPT+PrPyyzPSwOWHQ348KOtxw+6
      u38cQscp0RhoGp7v1Z5kru+iaRp+4Nd8MIEftBajqIEX6EZt2XQpaBpfykYplOX/GyPCyTbK
      ++Hz6ZrxbXwkwf0nW/cR3fT3qP+j1HuwGhiGpEeqPjEK7PfXb85knY2wcdymRqSkZJgAAAJw
      SURBVG2W9db/nXVRwTLnamm6XqLgeFzKn62lHUvfyUFnkPTs+sp0WwLQdQN9w4Ls6zsEdc3F
      DOfX9TCQrK/peJosyAv9RK8WdKbXZHPirs6H22lYi7wSucpyVL6N0tE07+xCHY14y5U41aL8
      nslKrK1rX1rMUwoFkLvBJEIj3GANP9wr7QW9m1k7mIzxm3evL8yNDma4sPls2y0SiVxmbOTL
      tc929ASJwnEOXVwXSzKtMZm/ynM/+mYtbcesAzxx7G2UBuVuLuMGG2y2grOyjLMkB9pug1im
      3cILwAsPBPG2cUz9v4I+3FAAd5LkrdtQZzJtcfeD6+bDoTEpeG1Dl0ej7nDnLlBdLLL67NT6
      57E8ulGhvPyrWlpH77RjQYlhPweAfoNw4SO+SzV8JUZ9LWyIwAr7gHqD1/I1riy9keUF2X2K
      JZIA5K/M4C/KtQYtmSIJJBLxWjSFZGJ3nFTwgdxV/NDjY2vNHaz+QAY/3FDvp+XfIGoOY4Rb
      Jm1DTkX7ml6bgPBbeFt3guWYzg+Ori+OvTljcHwLdqW87zFbWd/mOui5JPxBjMrpWprmDQGX
      b6r8jgogWCjAqhQAerWZ+4BPjyVwDNk/124QLvF9Z05Szkl7rWFJQR07cYpiOJNj2XK6dG1y
      CvfqjKw2kyEJfOi+d+GHJjcRaV6H5ydx/XLt963y+7Np8iVZ33Amxeea5Fs5YVCpyqdzkJH/
      DIdXgGs3i2j+hLRGhgicMFT7gLzZP+A9WpvR6fOGtvYlekRfJsNDp++vfY4ND/NSKc9/mj9X
      S/vkoSz3uyku/HT9hp9IFuhr8U4Wto4xsD7N/v8B069x9fQ0YIcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Strikes and Cost by State' width='192'>
      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
      EeY6t02M+3+GDmS46Hs8mgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Strikes by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Strikes vs Time of Day' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADnklEQVR4nO3azWoddQDG4ffEkzRt01g/qsaNoGDACIqIInhtXoAX485bEMR2EXFhsaFF
      CzExIafHfJA2yXGhSIWzbCbI+zy7/8zm3fxgmJnRbDabBUotXPUAuEoCoNr4+cPk0VZ2Nu9e
      1RYY3H8C2Nm8m+++/uqqtsDgPAJRbW4A4+XlrH36RRZv3Bx6DwxqPO/i4spqJg8f5NX3P8jF
      2VlOp5M8O5wmo4Wc7P8x9Ea4NHMDGCW58eZaklleX9/IycF+MrvI9r3vh10Hl2xuACcH+1lY
      XMrR7namj3/N2clxXnlvPafTydD74FLNDWB2fp7D7cdJkpO93STJ7o/3hlsFA5kbwLWXb+fO
      xseZ/vYop08mufPhRznZ38t4+Xr2fv4pa598nt83f8jZ8fHQe+GFmvsW6PTJJEc72zna3c7p
      dJLj3Z1MHv6Sp0d/5vY772Y0GmV87frQW+GFm/8dYDT6++ZLi1m6tZrZbJaFxaW8tr6Ri/Pz
      ZDTK0sqtIXfCpZj7CJTZLAdb97O0sppnR4c52LqfJHnw7TdJ8u8Z/u/mB/CPp4fToXbAlfAr
      BNUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBU
      EwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0A
      VBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBN
      AFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQ
      TQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUB
      UE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1
      AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRA
      NQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUE
      QDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQbfz84eYb
      b+Xtz768qi0wuL8AW96AenBsQYkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overall Analysis' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Strikes Impact on Flights' width='192'>
      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
      EwEQFO3/A24Xg5tPHjupAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Strikes and Costs with Species' width='192'>
      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
      KB4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Time of Day vs Avg Cost by Strike vs animals' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
